PR Number,Title,Created At,Updated At,State,Files Changed,Total Comments,Decision Time,URL,Type of Change,LOC Changed,Closed Date,Integration,Author,Formatted Comments
113882,Unsupported if wrong image used on virtualization,2024-03-20 14:26:34+00:00,2024-04-23 15:36:46+00:00,merged,1,1,27,https://github.com/home-assistant/core/pull/113882,New feature (which adds functionality to an existing integration),4,2024-04-16T15:54:49Z,hassio,mdegat01,"(review comment from reviewer) [2024-04-16T14:26:57Z] Nit, align wording with the one used in the more info page (https://www.home-assistant.io/more-info/unsupported/virtualization_image):

```suggestion
      ""description"": ""System is unsupported because the Home Assistant OS image in use is not intended for use in a virtualized environment. Use the link to learn more and how to fix this.""
```


(issue comment from reviewer) [2024-04-23T14:42:04Z] Removed this one from the milestone. The translations are fed by this, but it isn't used by core itself.

As translations are updated (separately), they will stay land in 2024.4.4
(issue comment from reviewer) [2024-04-23T15:36:45Z] I guess I am not really worried about actual translation, more that currently it generates empty dialogs, if I am not mistaken. So even if just English is shown, it would be an improvement.

But maybe if translation run isn't run, it would stay like that anyways? :thinking: "
95206,Issues template function,2023-06-25 18:08:46+00:00,2024-03-05 14:02:09+00:00,merged,2,11,252,https://github.com/home-assistant/core/pull/95206,New feature (which adds functionality to an existing integration),90,2024-03-04T13:22:14Z,,RoboMagus,"(review comment from reviewer) [2023-06-28T13:30:55Z] Please don't add comments, do a self-review instead where you add questions or remarks
(review comment from reviewer) [2023-06-28T13:31:10Z] This seems pointless
(review comment from author) [2023-06-28T13:46:13Z] Often only functions should be used on objects to get data from them rather than just grabbing into the internal data members. Hence the function (That is used by the template `{{ issues() }}`).
(review comment from author) [2023-06-28T13:57:37Z] Alright, removing that.

It's an open question based on an earlier PR thread relating event firing: https://github.com/home-assistant/core/pull/94393#issuecomment-1594720799, where @bdraco mentions the cost of firing events rather than using specifically registered callbacks.

I'm comparing the `issue_registry` here to `persistent_notifications` that use callback registration instead of these event firings and it seems to be something the issues component should use as well. Though admittedly that should be a separate PR.
(review comment from reviewer) [2023-06-28T14:05:29Z] Issues are expected to be much more rare so firing an event shouldn't be a problem.  It might only become a problem if they update from a 3 year old install but than it's only a problem once and not really a big deal 
(review comment from reviewer) [2023-06-28T14:29:42Z] I don't agree, if we don't want the `issues` attribute to be accessed it should be renamed to `_issues` + some getter added, but that's beside the point of this PR.
(issue comment from author) [2023-07-01T08:58:26Z] I'm seeing issues with the CI Pytest timing out.
Not sure what this is about, but it does not seem related to the proposed changes.


(issue comment from author) [2023-07-04T10:48:15Z] Looking at the service return values coming in 2023.7.x, that may be a better approach for getting at issues compared to exposing it as a template.
Thought?

I'm guessing with the new release only being a day away this PR won't make the cut, so that gives me some time to change the implementation. ;)
Otherwise it would have been great to get all actionable notification types (this and the persistent notifications) available to users in this release. 
(issue comment from author) [2023-07-16T14:16:35Z] > Looking at the service return values coming in 2023.7.x, that may be a better approach for getting at issues compared to exposing it as a template.

After playing around with the `ServiceResponse` implementation for a bit I personally feal like a template remains the best way to expose this information, as otherwise we would be too restricted (essentially just automations).
(issue comment from author) [2023-07-26T13:56:51Z] @bdraco, The architecture discussion was for allowing other components to register template functions which would indeed be a whole other level of complexity. However, as the issue registry already exists as a helper, exposing its functionality in the template environment is not as far fetched.

I'm open to alternatives for getting the `issues` information accessible to users (mostly for automation purposes), but as stated in my last comment registering a service in order to get this information out might be too limiting.

Simplifiction of the templates and reducing the (performance) impact of all the globals registrations is a separate issue a.f.a.i.c.
(issue comment from author) [2023-12-29T10:24:50Z] > @bdraco, The architecture discussion was for allowing other components to register template functions which would indeed be a whole other level of complexity. However, as the issue registry already exists as a helper, exposing its functionality in the template environment is not as far fetched.
> 
> I'm open to alternatives for getting the `issues` information accessible to users (mostly for automation purposes), but as stated in my last comment registering a service in order to get this information out might be too limiting.
> 
> Simplifiction of the templates and reducing the (performance) impact of all the globals registrations is a separate issue a.f.a.i.c.

Thoughts on alternatives that allows users to access current `issues`? 
(issue comment from reviewer) [2024-02-15T19:30:48Z] We discussed this in the core team and concluded the proposal is OK, as pointed out by @RoboMagus the new template function is well aligned with the existing `areas` function.
(review comment from reviewer) [2024-02-16T07:29:57Z] How is this useful as a filter?
(review comment from author) [2024-02-17T11:04:01Z] Unsure what you mean, but this format is kept in line with the others, e.g. `areas` and `area_id`.
(review comment from reviewer) [2024-02-26T18:36:20Z] adding this to `filters` means the `issues` function can be called by using Jinja's [filter syntax](https://jinja.palletsprojects.com/en/3.1.x/templates/#filters), `|`

I don't see how this is useful for the `issues` function, and I don't think it's useful for `areas` either.
(review comment from reviewer) [2024-02-27T07:28:53Z] I think we should remove this
```suggestion
```
(review comment from author) [2024-02-29T12:10:57Z] Ah, got it. Thanks for clarifying üëç 

(issue comment from reviewer) [2024-02-29T12:36:38Z] @RoboMagus I can't find a link to a documentation PR, have you created one already? If not, we need something similar to what's documented for the area registry related templates: https://www.home-assistant.io/docs/configuration/templating/#areas
Make sure your documentation PR is based on, and targets, the `next` branch :+1:
(issue comment from author) [2024-03-02T22:39:23Z] > @RoboMagus I can't find a link to a documentation PR, have you created one already? If not, we need something similar to what's documented for the area registry related templates: https://www.home-assistant.io/docs/configuration/templating/#areas Make sure your documentation PR is based on, and targets, the `next` branch üëç

Lost track on that, since it's already an older PR. Thanks for the heads-up @emontnemery.
Documentation PR now added: home-assistant/home-assistant.io#31712"
101190,Add entity_registry cleaning to Plugwise,2023-10-01 08:20:35+00:00,2023-11-11 10:01:58+00:00,closed,9,8,40,https://github.com/home-assistant/core/pull/101190,New feature (which adds functionality to an existing integration),106,2023-11-10T09:51:31Z,plugwise,bouwew,"(issue comment from author) [2023-10-01T08:23:12Z] Adding to the ongoing beta, or to a 2023.10.x release would be appreciated, thanks!
(review comment from reviewer) [2023-10-09T09:52:41Z] We should check the registry to see if the mocked device is removed instead of checking a total.

(review comment from reviewer) [2023-10-09T09:54:17Z] - I don't think dummy was supposed to be here?
- Also, it shouldn't be needed to track these? Feels weird?
(review comment from author) [2023-10-09T11:33:45Z] On the use of ""dummy"", the init needs to have the strings in place, I could change it to `{("""","""")}` that works too.
But `{()}` doesn't work, mypy is not happy with this.

Not needed to track these: you mean track the `self.current_entities`? 
This self contains the set of actual entities created during the initialization of the integration.
This set is compared to what is present in the entity_registry, if there are more entities present in the entity_registry then in the set, it means some cleaning can be done.
(review comment from author) [2023-10-09T11:34:35Z] Yes, sure, will update the test later today.
(review comment from author) [2023-10-09T16:09:56Z] Updated as suggested.
(review comment from author) [2023-10-09T16:28:24Z] @frenck I'm seeing that ISY994 uses this as init:
```
        current_unique_ids: set[tuple[Platform, str]] = {
            (Platform.BUTTON, f""{self.uuid}_query"")
        }
```
I can follow this idea and create a better but still a dummy entry in the set.
The dummy can be there, it does not harm anything because the difference-function in this `set(entities.keys()).difference(isy_data.unique_ids)` only leaves the entities that are present in the entity_registry and that are not present in the set with current_unique_ids.
(review comment from author) [2023-10-09T17:55:02Z] Some improvements have been implemented.
(review comment from author) [2023-10-12T11:01:36Z] @frenck looking forward to receiving your feedback on the latest changes :)
(issue comment from author) [2023-11-10T09:51:31Z] Let's retract this PR, plan is to implement device-removal instead."
91081,Move BMW Target SoC to number platform,2023-04-08 12:27:11+00:00,2023-12-21 14:19:57+00:00,merged,11,16,21,https://github.com/home-assistant/core/pull/91081,New feature (which adds functionality to an existing integration),397,2023-04-29T15:41:34Z,bmw_connected_drive,rikroe,"(review comment from reviewer) [2023-04-25T07:58:37Z] We can just implement the `native_value` property method instead in this case.
(review comment from reviewer) [2023-04-25T08:30:54Z] If we never use the key in the `NUMBER_TYPES` dict, it doesn't need to be a dict. It could be a tuple, eg.
(review comment from reviewer) [2023-04-25T20:29:26Z] We don't seem to need the check. We can just return the value regardless if it's None or not.
(review comment from author) [2023-04-25T20:35:18Z] üëç just figured that out on my own. Sorry for the commit spam, currently sitting in the train and the internet isn't fast enough to setup the full development environment on my work laptop... 
(review comment from reviewer) [2023-04-25T20:40:13Z] This is now no longer needed

```suggestion
```
(review comment from reviewer) [2023-04-25T20:40:37Z] What is this call fails? Can it raise? should it be handled?
(review comment from author) [2023-04-25T20:54:11Z] The library could raise a `ValueError` in case the given number is not a multiple of 5. 
If communication with the BMW APIs fail, multiple errors could be raised: `httpx.HTTPStatusError`, `TimeoutError` (if the API cannot reach the vehicle in time) or a plain exception if something totally unexpected happens.

In my mind, we don't need additional error handling in here, as each failure mode is an actual failure we cannot recover from (well, we could retry but that usually doesn't help much - either the API works and it runs through, or there is something wrong and we have to wait for the API/car to recover).
(issue comment from author) [2023-04-25T21:05:07Z] CI fails due to `Error: API rate limit exceeded for installation ID 689304`
(review comment from reviewer) [2023-04-25T21:45:46Z] We do need to handle them. Only ValueError and HomeAssistantError is handled upstream. The rest are bugs and have side effects.



(review comment from author) [2023-04-25T22:16:16Z] But I suppose a broad `except Exception as ex` would not be the way to go? :)

I could implement a custom error class in the library (or rather reuse the ones implemented for #90274 and add more for the remote services in an additional libary version). 

However I am unsure how to best continue with this: Adding error handling should then be done in this PR, added to `select` from #88759 and implemented for [bmw_connected_drive/button.py#L129](https://github.com/home-assistant/core/blob/dev/homeassistant/components/bmw_connected_drive/button.py#L129).

As I won't be able to get something else than `except Exception as ex` through until the beta cut, please advise on how you would like to continue:
- broad exception (and adjust/improve in a later PR)
- keep as is and I'll create another PR in the next days that fixes exception handling for all above (should be able to fix it during beta fix if required)
- don't merge this (and then have a breaking change for 2023.6)
(review comment from author) [2023-04-27T19:03:07Z] Hope this satisfies the requirement (and maybe it can be squeezed into this beta?). Otherwise this will be breaking change for 2022.6 and I'll add the breaking change paragraph again.
(review comment from reviewer) [2023-04-28T12:21:54Z] What will raise a `TypeError`?
(review comment from reviewer) [2023-04-28T12:22:52Z] Please add a link to a changelog or GitHub commit compare view for the version bump in the PR description. Thanks!
(review comment from author) [2023-04-28T12:51:18Z] Forgot that, sorry. It is there now.
(review comment from author) [2023-04-28T12:56:09Z] The climate start/stop services won't trigger `TypeError` right now. When used in notify, it could be raised if parameters are of the wrong type.

If wanted, I can remove it (as it should not occur here).
(review comment from reviewer) [2023-04-28T19:14:19Z] If it can't happen we shouldn't add the code here.
(review comment from author) [2023-04-28T19:15:45Z] Figured as much an already removed in https://github.com/home-assistant/core/pull/91081/commits/b891651f8b1bc830b8a067e0cc26344c80e37df5 
(issue comment from reviewer) [2023-04-28T19:22:32Z] I added it to the milestone to avoid a breaking change.
(issue comment from author) [2023-04-28T19:33:22Z] Just removed the string casting as frenck requested in https://github.com/home-assistant/core/pull/92199#discussion_r1180734104.
Otherwise no changes."
111512,Add icon translations to Elkm1,2024-02-26 19:05:36+00:00,2024-03-06 09:02:20+00:00,merged,2,0,7,https://github.com/home-assistant/core/pull/111512,New feature (which adds functionality to an existing integration),31,2024-03-05T04:45:03Z,elkm1,joostlek,
75251,Add Status and Configuration Entities for Tuya Smart Locks,2022-07-15 08:49:07+00:00,2023-12-04 19:06:06+00:00,closed,7,0,506,https://github.com/home-assistant/core/pull/75251,New feature (which adds functionality to an existing integration),957,2023-12-03T19:05:09Z,,,"(issue comment from reviewer) [2022-07-16T15:08:29Z] Why did you close the other and created a new one? 
(issue comment from reviewer) [2022-07-16T23:10:02Z] > Why did you close the other and created a new one?

I forgot I had PR pending and deleted the fork... ü§¶üèª‚Äç‚ôÇÔ∏è
(issue comment from reviewer) [2022-10-19T07:43:18Z] Waiting for review‚Ä¶
(issue comment from reviewer) [2023-01-24T05:15:46Z] Fixed the rebase bugs, but still need to fix the translations.
(issue comment from reviewer) [2023-01-24T07:18:18Z] > Sorry for the delays @dougiteixeira üôè
> 
> Could you rebase the PR so we can start moving it forward?

Hey @frenck, I believe it's in review condition.

Thanks.
(issue comment from reviewer) [2023-05-11T17:54:37Z] @frenck can you check this please?
(issue comment from reviewer) [2023-05-19T00:49:37Z] > @frenck can you check this please?

@frenck ! Please !!! 
(issue comment from reviewer) [2023-06-12T17:26:56Z] Any progress on that? Awaiting HA to support Tuya smart locks.
(issue comment from reviewer) [2023-06-14T17:12:57Z] @frenck Could you check!? 
(issue comment from reviewer) [2023-06-21T15:49:24Z] going to bump this PR since I really want the lock to be integrated lol
(issue comment from reviewer) [2023-07-09T16:11:42Z] Can someone explain me what this PR is waiting for? Only approval from @frenck?"
117207,Add  unifi sensor for number of clients to device,2024-05-10 19:59:01+00:00,2024-06-13 15:01:58+00:00,closed,1899,8,32,https://github.com/home-assistant/core/pull/117207,New feature (which adds functionality to an existing integration),63565,2024-06-12T14:50:09Z,unifi,kimdv,"(issue comment from author) [2024-05-10T19:59:22Z] This PR is created as a draft, just to see if I'm on the right path. 
(issue comment from reviewer) [2024-05-10T20:52:23Z] Yes. Go on üëçüèª
(issue comment from reviewer) [2024-05-11T18:12:48Z] I've published aiounifi v78 https://github.com/Kane610/aiounifi/compare/v77...v78
(issue comment from reviewer) [2024-05-16T19:08:26Z] This one is nearly complete, maybe fix this simple one in between the more complex PRs?
(review comment from reviewer) [2024-05-31T21:16:07Z] Im not sure if we should consider this data for this sensor
(review comment from author) [2024-06-01T08:06:44Z] So my initial thought is that I want to know how many devices is on the network now.
If I understand it correctly, when removing the number will only increase when devices join the network right ?
(review comment from reviewer) [2024-06-05T18:08:47Z] It would presumably just take a bit longer before the number decreases. I think its better to start without this tweak and we can then add it if people are unhappy with the representation
(review comment from author) [2024-06-06T08:52:38Z] Just to be clear and I fully understand it üòÖ
 will the number always increase and never decrease then?  
(review comment from reviewer) [2024-06-06T08:54:35Z] Remove it and test it out :)

I would assume it would decrease (but maybe in a lower fashion) as well but if it doesnt we keep it in
(review comment from author) [2024-06-06T12:39:18Z] Removed ti
(review comment from reviewer) [2024-06-06T13:13:30Z] So you tester it and it still works?
(review comment from reviewer) [2024-06-08T11:41:48Z] Sorry for back and forth here, I saw that the same thing was done on the wlan client side, so lets keep it as it was considering the last seen as well.
(issue comment from reviewer) [2024-06-11T16:42:14Z] Oops
(issue comment from reviewer) [2024-06-12T14:50:09Z] New PR is up to side step my rebase debacle :)"
124202,Add YoLink lock V2 support,2024-08-19 07:16:18+00:00,2024-08-29 15:02:13+00:00,merged,1,1,9,https://github.com/home-assistant/core/pull/124202,New feature (which adds functionality to an existing integration),39,2024-08-28T12:18:56Z,yolink,matrixd2,"(issue comment from author) [2024-08-28T03:53:00Z] Any updates?
(review comment from reviewer) [2024-08-28T11:50:40Z] This can be moved outside of the if statement"
108896,Add play/pause functionality for Vizio Smartcast media_player entities,2024-01-26 07:00:46+00:00,2024-04-26 07:01:45+00:00,merged,3,5,89,https://github.com/home-assistant/core/pull/108896,New feature (which adds functionality to an existing integration),17,2024-04-25T06:25:10Z,vizio,NasaGeek,"(issue comment from author) [2024-03-27T06:25:57Z] Resolved conflicts and would still like to see this merged if anyone would be willing to review it.
(review comment from reviewer) [2024-04-23T14:14:35Z] Why does one of these set `log_api_exception` to True and the other to False?
(review comment from author) [2024-04-23T23:00:18Z] I'm not sure what you mean; all instances of the `log_api_exception` parameter are set to `False` in this file.
(review comment from reviewer) [2024-04-24T06:12:00Z] Why is this changed? Is it to ensure the Play/Pause buttons always show in the frontend?
(review comment from reviewer) [2024-04-24T06:12:43Z] You're right, I have no idea what I meant üôà 
(review comment from author) [2024-04-25T04:24:36Z] Yes, this gives us separate play/pause buttons rather than a single dynamic button (which won't actually work correctly because the Vizio API doesn't provide a playing/paused/idle status)."
48703,Add hive alarm support,2021-04-05 20:32:33+00:00,2022-05-30 09:21:57+00:00,closed,12257,3,222,https://github.com/home-assistant/core/pull/48703,New feature (which adds functionality to an existing integration),595558,2021-11-14T09:56:06Z,hive,KJonline,"(issue comment from author) [2021-05-06T06:59:55Z] @MartinHjelmare please could you take a look at this?
(issue comment from author) [2021-07-05T08:23:48Z] @MartinHjelmare please can the stale label be removed and the PR reviewed?
(review comment from reviewer) [2021-11-14T05:41:09Z] The scope of variables could be reduced here.

Or maybe the entire thing can be shortened. I think something like this can work?
```suggestion
    if devices:
        async_add_entities([HiveAlarmControlPanelEntity(hive, dev) for dev in devices], True)
```
(review comment from reviewer) [2021-11-14T05:42:14Z] I realize this PR has been sitting for months -- now probably worth adding `DeviceInfo` here given that style was changed.
(review comment from reviewer) [2021-11-14T05:42:45Z] Consider updating to `_attr_icon = ICON` at the top of this class. (I realize this was a new style introduced after this PR was sent)
(issue comment from reviewer) [2021-11-14T09:32:06Z] Hi @GitHub-Action, 

It seems you haven't yet signed a CLA. Please do so [here](https://home-assistant.io/developers/cla_sign_start/?pr=home-assistant&#x2F;core#48703).

Once you do that we will be able to review and accept this pull request.

Thanks!

(issue comment from reviewer) [2021-11-14T09:52:48Z] Hi @GitHub-Action, 

It seems you haven't yet signed a CLA. Please do so [here](https://home-assistant.io/developers/cla_sign_start/?pr=home-assistant&#x2F;core#48703).

Once you do that we will be able to review and accept this pull request.

Thanks!

(issue comment from reviewer) [2021-11-14T09:56:06Z] Please start over in fresh branch and PR. The branch is tainted and you're notifying 25+ members.
(issue comment from author) [2021-11-14T09:56:18Z] @allenporter  Having to close this as the rebase has included all the commits a new PR will be opened"
58060,Add a Preset mode for Honeywell permanent hold,2021-10-19 20:17:16+00:00,2021-10-30 00:03:13+00:00,merged,4,14,9,https://github.com/home-assistant/core/pull/58060,New feature (which adds functionality to an existing integration),40,2021-10-28T23:59:51Z,honeywell,schreyack,"(issue comment from reviewer) [2021-10-19T20:17:19Z] Hi @schreyack, 

It seems you haven't yet signed a CLA. Please do so [here](https://home-assistant.io/developers/cla_sign_start/?pr=home-assistant&#x2F;core#58060).

Once you do that we will be able to review and accept this pull request.

Thanks!

(review comment from reviewer) [2021-10-20T13:25:50Z] Should this also turn off away mode?
(review comment from reviewer) [2021-10-20T13:26:01Z] Should this also turn off hold mode?
(review comment from author) [2021-10-20T13:31:20Z] it does both.
(review comment from author) [2021-10-20T13:32:16Z] mm. good point.  will fix.
(review comment from author) [2021-10-20T13:37:35Z] updated to flip the away mode boolean when turning on hold mode.
(review comment from author) [2021-10-20T13:40:35Z] sorry misunderstood your question... hold mode is determined by the actual state of the thermostat (since it is a natively supported feature) whereas away mode is a feature ""created"" in HA to simulate what many other types of thermostats do.  so when turning on away mode, we don't need to turn off hold mode.  (technically, on the thermostat itself, all away mode does is turn on hold mode and set the temperature.)  this new feature allows you to set hold mode without setting the temperature... ie maintain current temp setting.
(issue comment from author) [2021-10-26T16:09:31Z] > Please fix the imports and flake8 errors

done!
(issue comment from reviewer) [2021-10-26T20:10:09Z] Thanks for bumping the dependency! However, could you please update the PR description to contain at least one (or multiple) of the following:

- A link to the release notes of this package version, and all versions in between.
- A link to the changelog of this package.
- A link to a Git(Hub) diff/compare view from the current version to the bumped version.

This allows us to review upstream changes, which is needed to decide this change is working as intended and/or if we can include it in, for example, a patch release of Home Assistant.

Thanks already! üëç
(issue comment from author) [2021-10-26T21:03:20Z] > Thanks for bumping the dependency! However, could you please update the PR description to contain at least one (or multiple) of the following:
> 
> * A link to the release notes of this package version, and all versions in between.
> * A link to the changelog of this package.
> * A link to a Git(Hub) diff/compare view from the current version to the bumped version.
> 
> This allows us to review upstream changes, which is needed to decide this change is working as intended and/or if we can include it in, for example, a patch release of Home Assistant.
> 
> Thanks already! üëç

Diff view:
https://github.com/kk7ds/somecomfort/compare/0.7.0...0.8.0

Releases:
https://github.com/kk7ds/somecomfort/releases

(issue comment from reviewer) [2021-10-26T21:44:59Z] 
> Diff view: [kk7ds/somecomfort@0.7.0...0.8.0](https://github.com/kk7ds/somecomfort/compare/0.7.0...0.8.0)
> 
> Releases: [kk7ds/somecomfort/releases](https://github.com/kk7ds/somecomfort/releases)

In the future, please add this to the Proposed change section.  I've gone ahead and moved it for you.  Thanks!
(review comment from reviewer) [2021-10-26T21:51:04Z] It looks like `mode` is coming directly from the device and not the library
https://github.com/kk7ds/somecomfort/blob/master/somecomfort/client.py#L156
so we can't be sure its a hold mode.

Since there are only two modes, https://github.com/kk7ds/somecomfort/blob/master/somecomfort/client.py#L255

Would you please avoid using `setattr` here instead and throw an exception
if the mode returned isn't valid.
(review comment from author) [2021-10-27T13:41:36Z] Actually, we do know it's a hold mode.  The Honeywell thermostats have a permanent hold setting and the somecomfort library is able to gather that info from the device.  So in this case, the update I'm making is to allow a user to see if their device is in permanent hold or not and to also allow them to turn the hold on or off, which is why I use `setattr` to turn the hold mode on.
(review comment from reviewer) [2021-10-27T15:14:58Z] What's concerning here is the integration is accepting arbitrary unvalidated data from the Honeywell api and using it to set an attribute.  

This is one of the ways software vulnerabilities creep in. While I think the risk is low here, we should mitigate it if it's reasonable to do so.

If there is validation and I'm missing it, please help me out and point me to it.
(review comment from author) [2021-10-27T21:06:20Z] Ah!  Now I understand what you're after... I added a check that confirms the mode returned is within the values that it should be (auto, off, heat, cool).

https://github.com/home-assistant/core/pull/58060/commits/4c0212df14175e061bfc28f939fd9d981d7d30b1
(issue comment from reviewer) [2021-10-28T18:52:21Z] Should be good to go once the `pylint` issue is fixed

```
************* Module homeassistant.components.honeywell.climate
Warning: homeassistant/components/honeywell/climate.py:372:19: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
Warning: homeassistant/components/honeywell/climate.py:379:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
Error: Process completed with exit code 20.
```
(issue comment from reviewer) [2021-10-28T20:03:37Z] Its going to need `black` as well or the CI will fail.  Will start the CI after
(review comment from reviewer) [2021-10-28T20:04:55Z] ```suggestion
```
(review comment from reviewer) [2021-10-28T20:05:08Z] ```suggestion
        if mode in HW_MODE_TO_HVAC_MODE:
```
(review comment from reviewer) [2021-10-28T20:05:24Z] `.keys()` is the default so this was ok. It just wanted you to drop the `.keys()`
(issue comment from reviewer) [2021-10-28T20:08:37Z] In future PRs, please be sure to create a branch with `git checkout -b <your branch name here>` instead of merging from `dev` directly.  Thanks üëç 
(issue comment from author) [2021-10-28T20:27:34Z] running black now.  thanks for your patience with me on this... obviously it's my first time. :) 
(review comment from reviewer) [2021-10-28T22:17:10Z] ```suggestion
            _LOGGER.error(""Invalid system mode returned: %s"", mode)
```"
84869,Initial setup for Sunbeam Dual Zone Heated Bedding,2022-12-30 20:07:53+00:00,2023-07-05 16:08:21+00:00,closed,4,5,185,https://github.com/home-assistant/core/pull/84869,New feature (which adds functionality to an existing integration),81,2023-07-04T16:06:00Z,tuya,chuckdeal97,"(review comment from reviewer) [2023-01-17T10:31:17Z] These DPs aren't in the linked documentation?
(review comment from reviewer) [2023-01-17T10:31:50Z] I could not find these DPs in the linked documentation.
(review comment from reviewer) [2023-01-17T10:32:21Z] Why would Level 1 be ""Low"", and not just ""Level 1"" ?
(review comment from author) [2023-01-25T01:22:11Z] I was mimicking the tuya Smart Life app interface for this device.  It uses an ""L"" and ""H"" for the heat settings.  I'm not set on the idea and can put it back to match the actual codes.

<img src=""https://user-images.githubusercontent.com/106625807/214458674-8623e136-5360-43fd-adb0-51bc61b8b877.png"" width=""200"">
<img src=""https://user-images.githubusercontent.com/106625807/214458682-4f873983-24dc-4b11-b985-1d455d672c65.png"" width=""200"">
(review comment from author) [2023-01-25T02:04:05Z] My apologies for not making a stronger connection between the DPCodes and the documentation.  I was also frustrated by the complete mismatch of the documentation to what the diagnostics showed as the used codes.  I've attached the diagnostics report from this device from my Home Assistant.  

What would the correct way to support this device be?  Create local constants instead of adding to DPCodes?


[tuya-d49601845676c22b15d59c2008f4b0ef-Sunbeam Bedding-b547a8326b91fe6f46c2167bc036198e.json (1).txt](https://github.com/home-assistant/core/files/10495472/tuya-d49601845676c22b15d59c2008f4b0ef-Sunbeam.Bedding-b547a8326b91fe6f46c2167bc036198e.json.1.txt)
"
128530,Add switch entity to Cambridge Audio,2024-10-16 18:32:36+00:00,2024-10-26 13:05:03+00:00,merged,8,2,8,https://github.com/home-assistant/core/pull/128530,New feature (which adds functionality to an existing integration),265,2024-10-25T09:22:50Z,cambridge_audio,noahhusby,"(review comment from reviewer) [2024-10-16T19:15:19Z] ```suggestion
        ""name"": ""Early update""
```
(review comment from reviewer) [2024-10-16T19:15:37Z] ```suggestion
    async_add_entities(
        CambridgeAudioSwitch(entry.runtime_data, description)
        for description in CONTROL_ENTITIES
    )
```"
111968,Add `open` state to LockEntity,2024-03-01 17:32:25+00:00,2024-05-09 19:01:33+00:00,merged,18,3,68,https://github.com/home-assistant/core/pull/111968,New feature (which adds functionality to an existing integration),410,2024-05-08T18:42:22Z,lock,gjohansson-ST,"(review comment from reviewer) [2024-03-03T11:34:29Z] May be add a test to ensure code test coverage.
(review comment from author) [2024-03-03T11:50:04Z] Was a mistake in lock state which made this but it's now also tested properly üëç 
(issue comment from reviewer) [2024-03-04T15:50:46Z] I added the awaiting-frontend flag; this PR should not be merged until the frontend PR is approved.
(review comment from reviewer) [2024-04-13T13:33:21Z] This is technically correct as open means unlocked, but it would be easier for the user in the frontend if this would be""{entity_name} is open"". 
(issue comment from author) [2024-04-16T17:49:19Z] > I added the awaiting-frontend flag; this PR should not be merged until the frontend PR is approved.

Frontend PR has been approved
(issue comment from reviewer) [2024-04-16T20:18:19Z] These tests fail and are related to this PR:
```
FAILED tests/components/group/test_init.py::test_cover_added_after_group - AssertionError: assert 'locked' == 'closed'
FAILED tests/components/group/test_init.py::test_group_that_references_a_group_of_covers - AssertionError: assert 'locked' == 'closed'
FAILED tests/components/group/test_init.py::test_group_that_references_two_groups_of_covers - AssertionError: assert 'locked' == 'closed'
FAILED tests/components/group/test_init.py::test_group_that_references_two_types_of_groups - AssertionError: assert 'locked' == 'closed'
```
(issue comment from author) [2024-04-16T20:22:48Z] > These tests fail and are related to this PR:
> 
> ```
> 
> FAILED tests/components/group/test_init.py::test_cover_added_after_group - AssertionError: assert 'locked' == 'closed'
> 
> FAILED tests/components/group/test_init.py::test_group_that_references_a_group_of_covers - AssertionError: assert 'locked' == 'closed'
> 
> FAILED tests/components/group/test_init.py::test_group_that_references_two_groups_of_covers - AssertionError: assert 'locked' == 'closed'
> 
> FAILED tests/components/group/test_init.py::test_group_that_references_two_types_of_groups - AssertionError: assert 'locked' == 'closed'
> 
> ```

They don't fail locally and its covers?!
I guess I'll take another look tomorrow but it makes no sense to me. 
(issue comment from reviewer) [2024-04-16T20:24:20Z] > > These tests fail and are related to this PR:
> > ```
> > 
> > FAILED tests/components/group/test_init.py::test_cover_added_after_group - AssertionError: assert 'locked' == 'closed'
> > 
> > FAILED tests/components/group/test_init.py::test_group_that_references_a_group_of_covers - AssertionError: assert 'locked' == 'closed'
> > 
> > FAILED tests/components/group/test_init.py::test_group_that_references_two_groups_of_covers - AssertionError: assert 'locked' == 'closed'
> > 
> > FAILED tests/components/group/test_init.py::test_group_that_references_two_types_of_groups - AssertionError: assert 'locked' == 'closed'
> > ```
> 
> They don't fail locally and its covers?! I guess I'll take another look tomorrow but it makes no sense to me.

Update your local branch and you should be able to reproduce.
(issue comment from author) [2024-04-17T18:21:57Z] Tests are flaky but can't figure out what's the issue yet. 
If I run all group tests there is no issue, if I run only init tests it mostly fails but not always. Running the individual tests are fine. 

So something with this PR is obviously doing it (as in dev it seems all fine) but no idea yet. 
(issue comment from reviewer) [2024-04-17T18:23:22Z] > Tests are flaky but can't figure out what's the issue yet. If I run all group tests there is no issue, if I run only init tests it mostly fails but not always. Running the individual tests are fine.
> 
> So something with this PR is obviously doing it (as in dev it seems all fine) but no idea yet.

I could have a look?
(issue comment from reviewer) [2024-04-17T19:14:10Z] The tests became unpredictable after this PR. I can still reproduce some errors locally:

```bash
pytest tests/components/group/test_init.py --count 10 -n auto
```
(issue comment from reviewer) [2024-04-18T05:59:10Z] I think the new open state for locks might be confused with the cover open states when grouping together. The test might become lingering if it depends on the order the entities are grouped.
(issue comment from reviewer) [2024-04-18T06:38:25Z] This should fix the CI tests: https://github.com/home-assistant/core/pull/115797
(issue comment from reviewer) [2024-04-18T07:58:08Z] While the changes in https://github.com/home-assistant/core/pull/115797 fixes CI it also hides the underlying issue which to my understanding is that mixed legacy groups behave different depending on if `cover` or `lock` is setup first. I don't think we can merge this PR before that issue is fully understood.
(issue comment from reviewer) [2024-04-18T08:16:31Z] I added a new test case `tests/components/group/test_init.py::test_cover_lock_issue` which fails ~50% of the time on its own + some debug prints.

Before this PR, the group registry has these mappings in `GroupIntegrationRegistry.on_off_mapping`:
""open"" -> ""closed"" (Registred by cover)
""unlocked"" -> ""locked"" (Registred by lock)

With this PR, lock also registers this mapping, which conflicts with the mapping registered by cover:
""open"" -> ""locked"" (Registred by lock)

I think `GroupIntegrationRegistry.on_off_mapping` and `GroupIntegrationRegistry.off_on_mapping` need to be modified to be indexed by `(domain, state)` instead of just by `state` for this to be solved.

Edit:
This may be tricky for groups of groups
https://github.com/home-assistant/core/blob/6fc3b30174140a745193474543bb8085742c26e4/homeassistant/components/group/entity.py#L390-L395
(issue comment from reviewer) [2024-04-19T10:52:05Z] Opened https://github.com/home-assistant/core/pull/115849 to allow testing multi domain groups. If this gets merged we can add a case with `cover` and  `locks` that both have an `open` state.
(issue comment from reviewer) [2024-04-20T11:15:56Z] Opened https://github.com/home-assistant/core/pull/115866 to enable better support for entity platforms with multiple `on` states.
(issue comment from reviewer) [2024-04-24T15:04:35Z] Seems the group OFF to ON mapping was not used any more for the group state. Added some tests. Will open a separate fix PR to fix this for group and remove these commits here.

(issue comment from reviewer) [2024-04-24T17:20:40Z] Fix for group state: https://github.com/home-assistant/core/pull/116116"
63281,Vera scene exclude,2022-01-03 11:54:52+00:00,2022-05-17 21:01:42+00:00,closed,7,7,133,https://github.com/home-assistant/core/pull/63281,New feature (which adds functionality to an existing integration),57,2022-05-16T20:44:31Z,vera,mmillmor,"(issue comment from reviewer) [2022-01-03T11:54:54Z] Hi @mmillmor, 

It seems you haven't yet signed a CLA. Please do so [here](https://home-assistant.io/developers/cla_sign_start/?pr=home-assistant&#x2F;core#63281).

Once you do that we will be able to review and accept this pull request.

Thanks!

(review comment from reviewer) [2022-01-03T12:06:58Z] This should not be added to the YAML configuration. We don't allow changes or additions to the YAML configuration for integrations that connect to devices or services.
(review comment from author) [2022-01-03T12:10:48Z] OK. I was basing this on what was there before, but happy to change it. If I need to add a new setting to the set of existing settings, what is the right way to do it? 
(review comment from reviewer) [2022-01-03T12:11:43Z] > If I need to add a new setting to the set of existing settings, what is the right way to do it?

I'm not sure about this question, could you clarify it?

(review comment from author) [2022-01-03T12:17:11Z] Sure, no problem. This component already has 3 settings in the schema - the controller URL, a list of devices to treat as lights, and a list of devices to not import. I added a 4th setting in the schema - a list of scenes to not import. I added that new setting in exactly the same way as the other settings. The change was rejected on the basis that changes or additions to the YAML configuration are now allowed. My question is if it is not allowed to add an additional setting this way, what is the correct way to do it instead? This is my first tweak to an existing component, and would appreciate pointers on how to do it right.
(review comment from reviewer) [2022-01-03T12:20:43Z] You have added both the possibility to set this via YAML and via the UI (as part of an option flow). The option flow is fine üëç  The YAML part isn't allowed.

For more information see: <https://github.com/home-assistant/architecture/blob/master/adr/0010-integration-configuration.md#decision>
(review comment from author) [2022-01-03T12:37:00Z] Got it - thanks for explaining! I have removed that line now and re-tested
(issue comment from reviewer) [2022-01-04T14:27:30Z] @mmillmor Can you make sure the tests/CI pass?
(issue comment from author) [2022-01-22T11:43:59Z] All checks now pass
(review comment from reviewer) [2022-01-23T16:17:53Z] ```suggestion
        return f""vera_scene_{self.vera_scene.scene_id}""
```
(issue comment from reviewer) [2022-05-16T20:44:31Z] Because there hasn't been any activity on this PR for quite some time now, I've decided to close it for being stale.

Feel free to re-open this PR when you are ready to pick up work on it again üëç"
116134,Add allow_negative configuration option to DurationSelector,2024-04-24 22:08:32+00:00,2024-05-31 16:01:52+00:00,merged,2,3,35,https://github.com/home-assistant/core/pull/116134,New feature (which adds functionality to an existing integration),13,2024-05-30T15:42:35Z,,ronweikamp,"(issue comment from reviewer) [2024-04-25T08:26:47Z] @bramkragten we discussed this yesterday, could you take a look?
(review comment from reviewer) [2024-05-29T07:41:12Z] ```suggestion
            # Allow negative durations. Will default to False in HA Core 2025.6.0.
            vol.Optional(""allow_negative""): cv.boolean,
```
(issue comment from reviewer) [2024-05-29T07:49:32Z] The new behavior for the duration selector proposed in this PR is to make it possible for core integrations and blueprint developers to signal if only positive durations are allowed

#### Behavior today for the duration selector:
- Frontend: Allows both positive and negative durations, although red squiggles are shown when negative numbers are entered
- Core: Allows both positive and negative durations

#### New behavior when we allow both negative and positive durations:
- Frontend: Show a new control to indicate negative duration
- Core: Allow both positive and negative durations

#### New behavior when we do allow only positive durations:
- Frontend: Don't allow entering negative durations, don't show the control for negating a duration
- Core: Only allow positive durations

We don't want existing blueprints and integrations which already use the duration selector to suddenly show the new control for negating durations, but we also don't want to risk breaking blueprints which rely on it being possible (although unintuitive) to input negative durations. Hence, during a deprecation period, we should keep the old behavior if the new flag has not been set, and after that deprecation period default to only allowing positive durations.



(review comment from reviewer) [2024-05-29T08:07:41Z] ```suggestion
        if self.config.get(""allow_negative"", True):
            cv.time_period_dict(data)
        else:
            cv.positive_time_period_dict(data)
```
(review comment from reviewer) [2024-05-29T08:07:54Z] ```suggestion
            {""allow_negative"": False},
```
(issue comment from reviewer) [2024-05-30T14:31:53Z] @bramkragten Can this PR be merged before frontend has been updated, or should we wait for frontend?

Edit: Aligned with @bramkragten that it's OK to merge this PR first"
44827,Utility meter manual,2021-01-04 19:24:22+00:00,2021-02-14 01:31:25+00:00,closed,3,4,39,https://github.com/home-assistant/core/pull/44827,New feature (which adds functionality to an existing integration),28,2021-02-13T00:40:52Z,utility_meter,gigatexel,"(review comment from reviewer) [2021-01-04T20:00:15Z] I just realised something very important üòÑ 

The CONF_METER_TYPE is optional that means you **already** don't need to define the meter type

That is, your purpose (to not reset the utility_meter) already exists and is working!
(review comment from reviewer) [2021-01-04T20:03:13Z] What is missing is in the documentation, in there it should state (as seen in your PR) that the cycle is **optional**
(review comment from author) [2021-01-05T07:31:00Z] Yes, I also noticed that the CONF_METER_TYPE was already programmed as optional but not default value was assigned. In this way I feel it is better, because it eliminates ambiguity by defaulting to a given cycle.
Also added some extra clarification in manual text. In the `{% configuration %}` section of the docs, the `cycle`was already labeled as `required: false`
(review comment from reviewer) [2021-01-05T08:07:20Z] When it is `Optional` and no `default` is assigned, it gets assigned `None`"
106553,Add hysteresis support to Shelly integration,2023-12-28 13:14:24+00:00,2024-02-13 18:01:58+00:00,closed,4,9,46,https://github.com/home-assistant/core/pull/106553,New feature (which adds functionality to an existing integration),111,2024-02-12T17:13:05Z,shelly,chemelli74,"(review comment from reviewer) [2024-01-29T14:22:06Z] Config payload is not sent from the device periodically, in the case of `temperature hysteresis` no information about the value change is sent from the device. How will this value be updated in HA when the user changes it in the device UI?
(review comment from reviewer) [2024-01-29T14:23:55Z] The device user interface uses the name `Temperature hysteresis`, I think we should keep this name.
(review comment from author) [2024-01-29T14:31:22Z] When a config parameter is changed in the device UI, then a Event for it is generated and the `config_entry` is reloaded. This makes the value update.

(review comment from author) [2024-01-29T14:31:36Z] Good point, will change.
(review comment from reviewer) [2024-01-29T14:42:59Z] So we don't have real-time entity state updates, we need to wait 60 seconds for the config entry to reload. In my opinion, for the implementation of such an entity to make sense, the device must send the `temperature hysteresis` value periodically. Without this, value synchronization only occurs in one direction.
(review comment from reviewer) [2024-01-29T14:45:23Z] We need to ask the Shelly team again for this feature.
(review comment from author) [2024-01-29T15:00:38Z] Please try again, I did already twice.
Indeed would be the best solution.

(review comment from author) [2024-02-12T15:53:10Z] Final decision from Shelly is that we need to re-fetch config once we get the notification is changed.
This value won't be ever exposed as a status update.

(review comment from reviewer) [2024-02-12T16:12:10Z] In such case, in my opinion we should drop the implementation of this entity. Its usefulness in automations is very low, the user will change it once, maybe twice during device configuration, so he or she might as well do it from the device's configuration panel.
(issue comment from author) [2024-02-12T17:13:05Z] Rejected"
126798,Add refoss em16 device model,2024-09-26 05:55:09+00:00,2024-10-26 14:01:42+00:00,merged,2,7,29,https://github.com/home-assistant/core/pull/126798,New feature (which adds functionality to an existing integration),38,2024-10-25T13:22:25Z,refoss,ashionky,"(review comment from reviewer) [2024-09-30T19:07:24Z] This seems an unrelated change to what is being described in this PR?
(review comment from author) [2024-10-08T03:03:23Z] @frenck  
User feedback:   hope this time interval is shorter Ôºö https://github.com/ashionky/refoss_ha/issues/6
I will make a note in the description
(review comment from reviewer) [2024-10-21T14:18:15Z] Let's do this in a separate PR. I have a hard time believing that this is not possible without service call. My suspicion would be that the machine they are running this on is doing too much at the same time and can't keep up with the 5 seconds. Because 5 seconds is very very low for HA standards
(review comment from author) [2024-10-22T01:15:49Z] > Let's do this in a separate PR. I have a hard time believing that this is not possible without service call. My suspicion would be that the machine they are running this on is doing too much at the same time and can't keep up with the 5 seconds. Because 5 seconds is very very low for HA standards

Ok, I'll delete it.
Our device supports 5-second requests (the app also requests devices at 5-second intervals)
Users have previously reported this situation.
In the case of 5 seconds, I verified with my own computer that HA can work normally.
Thanks!

(review comment from reviewer) [2024-10-25T10:01:00Z] I am now looking at this, and this list is exactly the same as the `em06` one. I'd rather see that deduplicated
(issue comment from author) [2024-10-25T12:49:37Z] > The code does not work since `""em""` is not a value of `SENSORS`

The code is ready now
(issue comment from reviewer) [2024-10-25T12:50:43Z] No, the code literally doesn't work. It's now broken for both the em06 and em16
(issue comment from author) [2024-10-25T13:04:11Z] > No, the code literally doesn't work. It's now broken for both the em06 and em16

üòØ Haha, I saw itÔºå ThanksÔºÅ
(review comment from author) [2024-10-25T13:29:07Z] > Let's do this in a separate PR. I have a hard time believing that this is not possible without service call. My suspicion would be that the machine they are running this on is doing too much at the same time and can't keep up with the 5 seconds. Because 5 seconds is very very low for HA standards

Can I submit a separate PR for this modification pointÔºü
(review comment from reviewer) [2024-10-25T13:40:53Z] You're always free to open a PR, but I think that 5 seconds is very very low and not useful for the majority of users"
114667,Add reconfigure step for here_travel_time,2024-04-02 19:40:11+00:00,2024-08-01 15:01:44+00:00,merged,3,5,119,https://github.com/home-assistant/core/pull/114667,New feature (which adds functionality to an existing integration),288,2024-07-31T13:08:25Z,here_travel_time,eifinger,"(review comment from reviewer) [2024-05-28T08:15:19Z] Assuming this is for type checking, change like this:
```suggestion
        if TYPE_CHECKING:
            assert self._entry
```
(review comment from reviewer) [2024-05-28T08:17:00Z] Don't present the form of another step, instead call `async_step_user`
(review comment from reviewer) [2024-05-28T08:19:57Z] Add a comment explaining we pop this to clear previous configuration using an entity
(review comment from reviewer) [2024-05-28T08:20:09Z] Add a comment explaining we pop these to clear previous configuration using coordinates
(review comment from reviewer) [2024-05-28T08:21:19Z] Instead of defaults, use constant schemas with suggested values added by calling `self.add_suggested_values_to_schema`"
119191,Add more airgradient configuration entities,2024-06-09 08:22:07+00:00,2024-06-19 21:01:41+00:00,merged,3,0,9,https://github.com/home-assistant/core/pull/119191,New feature (which adds functionality to an existing integration),170,2024-06-18T20:34:11Z,airgradient,joostlek,
88346,Add callback support to nuki,2023-02-17 18:21:04+00:00,2023-03-29 11:01:51+00:00,merged,2,16,38,https://github.com/home-assistant/core/pull/88346,New feature (which adds functionality to an existing integration),112,2023-03-28T09:28:05Z,nuki,pree,"(issue comment from author) [2023-03-15T09:39:16Z] > There is a merge conflict, could you take a look?
> 
> Thanks! +1
> 
> ../Frenck

rebased with dev :)
(review comment from reviewer) [2023-03-15T12:03:20Z] We have a webhook integration, see i.e. ecowitt. Please use the webhook feature together with this callback
(review comment from reviewer) [2023-03-15T12:13:16Z] ```suggestion
      ""description"": ""Your local network address for Home Assistant is configured with an HTTPS URL. This needs to be an HTTP URL for the Nuki bridge to be able to push events to Home Assistant.""
```
(review comment from reviewer) [2023-03-15T12:13:54Z] Additionally, this needs to explain to the user what they need to do and how they can fix this issue.

Right now, this is more of a notification, without any clear path for the user on how to solve the problem and how to dismiss the issue raised by this integration.
(review comment from reviewer) [2023-03-15T12:15:38Z] This is not how this check should be done. `get_url` provides parameters to set your URL requirements and will throw when it cannot meet that.

See: <https://developers.home-assistant.io/docs/instance_url>

However, as per above by pvizeli, it should not handle/build this by itself.
(review comment from author) [2023-03-15T14:37:48Z] As far as I can see I can only force it to SSL, but not require it to be HTTP only. 
(review comment from author) [2023-03-17T00:03:05Z] Changed to the webhook integration like ecowitt.
(review comment from author) [2023-03-17T00:03:49Z] I committed your suggestions and added a sentence. 
(review comment from author) [2023-03-17T00:05:01Z] Added some additional parameters to the `get_url` function, but I don't see how we could remove the HTTP check here. 
(review comment from reviewer) [2023-03-20T13:48:24Z] there is nothing that return False or get checked, why not just set to None?
(review comment from reviewer) [2023-03-20T13:49:34Z] I mean we have the same issue on ecowitt, no SSL support. We just documented it at the docs. But that part I guess,  @frenck need look over it
(issue comment from reviewer) [2023-03-21T10:56:17Z] @pree can you send me a friend request on discord?
(issue comment from author) [2023-03-21T11:01:20Z] > @pree can you send me a friend request on discord?

sent you one (Schizopriest)
(review comment from author) [2023-03-21T19:32:03Z] Changed
(review comment from author) [2023-03-22T22:21:37Z] removed the http check & issue registry stuff. 
(review comment from author) [2023-03-22T22:22:15Z] I removed the http check &  issue registry stuff.
(review comment from reviewer) [2023-03-27T10:01:29Z] ```suggestion
                await hass.async_add_executor_job(_remove_webhook, bridge, entry.entry_id)
```
(review comment from author) [2023-03-27T10:11:52Z] When implementing this (+ `async with`), mypy throws following errors:
```
homeassistant/components/nuki/__init__.py:154: error: ""async with"" outside async function  [syntax]
homeassistant/components/nuki/__init__.py:155: error: ""await"" outside coroutine (""async def"")
Found 2 errors in 1 file (errors prevented further checking)
```
(review comment from author) [2023-03-27T10:23:44Z] changed the method to `async` instead of `callback`."
53361,Add api to device_automation to return all matching devices,2021-07-22 20:26:55+00:00,2021-08-11 20:06:27+00:00,merged,6,0,18,https://github.com/home-assistant/core/pull/53361,New feature (which adds functionality to an existing integration),213,2021-08-10T19:21:34Z,device_automation,bdraco,"(issue comment from author) [2021-08-10T18:42:51Z] No changes, rebase only to prevent stale
(issue comment from author) [2021-08-10T19:21:39Z] Thanks üëç "
106501,Add get_torrents service to qBittorrent integration,2023-12-27 19:40:14+00:00,2024-04-30 15:01:37+00:00,merged,8,21,113,https://github.com/home-assistant/core/pull/106501,New feature (which adds functionality to an existing integration),356,2024-04-19T05:56:37Z,qbittorrent,finder39,"(issue comment from reviewer) [2023-12-27T19:54:30Z] @engrbm87 can you also take a look at this? Since I also promoted the use of a service call for transmission, maybe it's an idea to use a similar return schema so it's easier for custom card creators to create a card that works for both integrations. 
(issue comment from reviewer) [2023-12-27T19:59:04Z] > @engrbm87 can you also take a look at this? Since I also promoted the use of a service call for transmission, maybe it's an idea to use a similar return schema so it's easier for custom card creators to create a card that works for both integrations. 

Sure, I will work on something similar for transmission. But I would like to know how the response can be displayed on the frontend (like a markdown card).
(issue comment from author) [2023-12-27T20:00:26Z] > > @engrbm87 can you also take a look at this? Since I also promoted the use of a service call for transmission, maybe it's an idea to use a similar return schema so it's easier for custom card creators to create a card that works for both integrations.
> 
> Sure, I will work on something similar for transmission. But I would like to know how the response can be displayed on the frontend (like a markdown card).

I built a custom card that does that for qBittorrent with this new service. I can upload it to github later today
(issue comment from reviewer) [2023-12-27T20:02:28Z] > > > @engrbm87 can you also take a look at this? Since I also promoted the use of a service call for transmission, maybe it's an idea to use a similar return schema so it's easier for custom card creators to create a card that works for both integrations.
> > 
> > Sure, I will work on something similar for transmission. But I would like to know how the response can be displayed on the frontend (like a markdown card).
> 
> I built a custom card that does that for qBittorrent with this new service. I can upload it to github later today

Will this card work for any service response or is it specific for qBittorent. It would be hard to build a separate card for each integration.
(issue comment from author) [2023-12-27T20:13:50Z] > > > > @engrbm87 can you also take a look at this? Since I also promoted the use of a service call for transmission, maybe it's an idea to use a similar return schema so it's easier for custom card creators to create a card that works for both integrations.
> > > 
> > > 
> > > Sure, I will work on something similar for transmission. But I would like to know how the response can be displayed on the frontend (like a markdown card).
> > 
> > 
> > I built a custom card that does that for qBittorrent with this new service. I can upload it to github later today
> 
> Will this card work for any service response or is it specific for qBittorent. It would be hard to build a separate card for each integration.

I mean the card is specifically built for qBittorrent in this case, but its using the standard HA way of calling a service with a response. So the knowledge gained from me building it can be used elsewhere.

I built it off of https://github.com/amaximus/transmission-card, but customized it for qbittorrent and its new service call
(issue comment from reviewer) [2023-12-27T20:15:10Z] I'm slowly playing with the idea of ""standardised service calls"". We of course have them for our entity platforms like ""climate.set_hvac"" or ""calendar.get_events"". But I think it would benefit some types of integrations as well to have a standard service call. For example public transport integrations or download integrations.

And currently there are no plans afaik to support something like that in core itself, but I'll fish around checking what others think of it and maybe we can implement it.

This doesn't have to hold us back into making 2 ""custom"" services return in the same data structure 
(issue comment from reviewer) [2023-12-27T20:17:01Z] And the idea behind it is that we don't create a complete new entity platform for public transport or download integrations, but just keep using these mostly sensor based integrations
(issue comment from reviewer) [2023-12-28T20:42:13Z] @tkdrob can you also take a look for Deluge?
(issue comment from author) [2024-01-01T03:27:40Z] @engrbm87 Take at look at the [qBittorrent card here](https://github.com/finder39/qbittorrent-card/blob/dev/qbittorrent-card.js). I'm in the process of cleaning it up (and want to rebase off the changes that azamimus made, but it gives a good idea of how to handle this.

The main functions to look at are:
- `_getTorrents`: handles the get_torrents service call from HA
- `_setupGetTorrentsInterval`: handles setting up the interval at which the service call is made
- `updated`: enables initial setup of service call interval and updates it when needed
- `disconnectedCallback`: clears out the interval call when required
(issue comment from reviewer) [2024-01-02T11:57:27Z] > @engrbm87 Take at look at the [qBittorrent card here](https://github.com/finder39/qbittorrent-card/blob/dev/qbittorrent-card.js). I'm in the process of cleaning it up (and want to rebase off the changes that azamimus made, but it gives a good idea of how to handle this.
> 
> The main functions to look at are:
> 
> * `_getTorrents`: handles the get_torrents service call from HA
> * `_setupGetTorrentsInterval`: handles setting up the interval at which the service call is made
> * `updated`: enables initial setup of service call interval and updates it when needed
> * `disconnectedCallback`: clears out the interval call when required

@finder39 Thanks for sharing the progress of the custom card. I have a couple of ideas for this card. Perhaps you can enable the discussion or issues tab on your repository and we can discuss it there.
(issue comment from author) [2024-01-02T19:19:24Z] > @finder39 Thanks for sharing the progress of the custom card. I have a couple of ideas for this card. Perhaps you can enable the discussion or issues tab on your repository and we can discuss it there.

@engrbm87  Done! 
(issue comment from reviewer) [2024-03-17T02:29:54Z] Whoops, I should've looked at this
(review comment from reviewer) [2024-03-26T09:00:25Z] I think our general consensus is now that we want this to be in `async_setup`, otherwise the service is dependent on the config entry.

I am also not sure how this exactly works when you have 2 config entries for qbittorrent
(review comment from reviewer) [2024-03-26T09:01:54Z] Can we completely type this?
(review comment from author) [2024-04-02T23:57:10Z] Lemme take a look at this and check
(issue comment from author) [2024-04-02T23:58:38Z] > I don't know what the test state of QBittorrent is, but would it be possible to add tests for this? We can use snapshots to snapshot the service response, this way the response is visible in the code.

I don't believe there are many tests. Let me see what it would entail to add some for this
(review comment from reviewer) [2024-04-16T15:27:40Z] This should raise a `ServiceValidationError`
(review comment from reviewer) [2024-04-16T15:27:50Z] Please annotate the return type
(review comment from reviewer) [2024-04-16T15:28:07Z] This too should raise a `ServiceValidationError`
(review comment from reviewer) [2024-04-16T15:30:11Z] `total_torrents` is a bit weird for something which is a list, `torrents` would be better.
(review comment from reviewer) [2024-04-16T15:31:44Z] I think the service handlers need to catch this and reraise a translated `HomeAssistantError`
(issue comment from author) [2024-04-18T00:18:34Z] The requested changes have been made
(review comment from reviewer) [2024-04-18T06:42:30Z] Pass in the device_id instead, for a more readable error message:
```suggestion
      ""message"": ""No device with id {device_id} was found""
```
(review comment from reviewer) [2024-04-18T06:44:24Z] Shouldn't this be translated, or can `LoginRequired` happen in many cases?
(review comment from reviewer) [2024-04-18T06:45:26Z] What's the difference between the manual formatting and the output of the `isoformat` method? Why do we format it at all?
(review comment from author) [2024-04-18T18:12:40Z] I handled this how I found other integrations were but i can change this to be a translated string.

I believe this is a very rare occurance as it should only happen if a user changes the username/password of their qBittorrent software after adding to HA. As this is a local program running that would be very rare and there isn't a need to change that for security.
(review comment from author) [2024-04-18T18:46:41Z] Was making sure the format was the same as Transmission's integration but that looks to be the same except with `+0000` on the end, so can format that way.
(review comment from reviewer) [2024-04-29T14:46:25Z] I'm missing a service validation schema for the services.
(review comment from reviewer) [2024-04-29T14:46:46Z] These are not state attributes. Please rename the constants.
(review comment from reviewer) [2024-04-29T14:47:23Z] We don't need constants for strings that are only used once.
(review comment from reviewer) [2024-04-29T14:47:36Z] Commented code. Please remove it.
(review comment from reviewer) [2024-04-29T14:47:57Z] These instance attributes are never used. Please remove them.
(review comment from reviewer) [2024-04-29T14:48:58Z] Why did we change the exception in this PR? That looks unrelated to the new services.
(review comment from reviewer) [2024-04-29T14:50:37Z] The parameter is missing a type annotation. Please type the whole signature when adding type annotations.
(review comment from reviewer) [2024-04-29T14:52:29Z] ""grab the list"" is too colloquial English and not correctly explained what it's referring to."
64189,Expose entity device temperature from cluster in ZHA,2022-01-16 10:51:56+00:00,2022-01-24 15:03:26+00:00,merged,6,4,7,https://github.com/home-assistant/core/pull/64189,New feature (which adds functionality to an existing integration),59,2022-01-23T14:37:01Z,zha,rforro,"(issue comment from reviewer) [2022-01-16T10:51:58Z] Hi @rforro, 

It seems you haven't yet signed a CLA. Please do so [here](https://home-assistant.io/developers/cla_sign_start/?pr=home-assistant&#x2F;core#64189).

Once you do that we will be able to review and accept this pull request.

Thanks!

(review comment from author) [2022-01-16T10:56:56Z] I'm not sure why this had to be done, it was working without as well. I've done it only because some tests were failing.


(review comment from author) [2022-01-16T10:59:21Z] I have no idea if value `1` is correct. `0` was failing, so I wrote `1`.
(issue comment from author) [2022-01-16T11:01:24Z] Should definition of device clusters in `tests/components/zha/zha_devices_list.py` represent the real device or replacement done be quirks?
(review comment from reviewer) [2022-01-16T14:44:48Z] Has to be done for zcl compliant devices. Xiaomi sends updates regardless. 
(review comment from reviewer) [2022-01-16T14:57:27Z] It's the number of attribute reports the tests expects and entity shouldd receive. 1 is correct for your test
(issue comment from author) [2022-01-16T15:50:02Z] Black is fixed.

Don't forget to squash commits in this PR, somehow you missed it in here: https://github.com/zigpy/zha-device-handlers/pull/1248
(issue comment from reviewer) [2022-01-16T21:13:45Z] Doh, too late now. Yeah, was supposed to be a squash merge.
(issue comment from reviewer) [2022-01-23T14:35:56Z] Anything blocking this PR from being merged?"
128547,"Add min, max for WATER_HEATER device",2024-10-17 07:12:36+00:00,2024-10-30 14:02:01+00:00,closed,1,8,12,https://github.com/home-assistant/core/pull/128547,New feature (which adds functionality to an existing integration),11,2024-10-29T13:20:26Z,lg_thinq,LG-ThinQ-Integration,"(review comment from reviewer) [2024-10-17T07:16:00Z] Why didn't we implement the water_heater platform for this?
(review comment from author) [2024-10-17T07:31:11Z] HA water_heater platform support only 0.5 step.
But our devices only support step 1.
That's why we didn't implement the water_header platform.
(review comment from reviewer) [2024-10-17T07:40:24Z] You can overwrite the precision right?

https://github.com/home-assistant/home-assistant/blob/master/homeassistant%2Fcomponents%2Fwater_heater%2F__init__.py#L194-L201
(review comment from author) [2024-10-17T08:08:51Z] Let us discuss about that.
(review comment from author) [2024-10-18T05:30:16Z] As we tested in HomeAssistant, frontend only supporty 0.5 step with +,- buttons.
That is because water_heater entity does not have 'attr_target_temp_step'.
We need 0.5 step in frontend.
If I am wrong please let me know.
(review comment from reviewer) [2024-10-21T14:28:27Z] Frontend has support but backend not (`target_temp_step` is not implemented in `WaterHeaterEntity`).
Otherwise for Fahrenheit it will be step 1, for celsius 0.5.
(review comment from author) [2024-10-24T23:31:58Z] 'core' only supports 1step, but 'frontend' supports 0.5.
User could get it wrong.
In conclusion, 
WaterHeaterEntity does not work as we want.
So we need this.
(issue comment from author) [2024-10-29T12:12:22Z] This PR needs to be rebased properly.
(review comment from reviewer) [2024-10-29T12:48:58Z] I think we can agree with that so I close this conversation as resolved."
45906,Add LastTrip sensors for BMW Connected Drive,2021-02-03 14:55:09+00:00,2021-05-10 16:44:30+00:00,merged,1,4,95,https://github.com/home-assistant/core/pull/45906,New feature (which adds functionality to an existing integration),174,2021-05-09T15:51:59Z,bmw_connected_drive,EddyK69,"(issue comment from reviewer) [2021-02-03T14:57:18Z] Hi @EddyK69, 

It seems you haven't yet signed a CLA. Please do so [here](https://home-assistant.io/developers/cla_sign_start/?pr=home-assistant&#x2F;core#45906).

Once you do that we will be able to review and accept this pull request.

Thanks!

(issue comment from reviewer) [2021-02-03T20:31:35Z] Make sure you're working inside a [developer environment](https://developers.home-assistant.io/docs/development_environmentl) and that'll fix those isort and black test failures.
(issue comment from reviewer) [2021-03-28T15:44:39Z] Bumping the PR.
(review comment from reviewer) [2021-03-28T16:26:24Z] What kind of date value is this? Times in the state attributes should be UTC.
(review comment from author) [2021-04-10T16:29:35Z] Fixed!
(review comment from reviewer) [2021-04-10T21:07:38Z] I think we can use device class timestamp for this sensor. Then we should return the datetime as an isoformatted string.

https://docs.python.org/3/library/datetime.html#datetime.datetime.isoformat

https://developers.home-assistant.io/docs/core/entity/sensor#available-device-classes

Please implement the `device_class` property in the entity. And we don't need a custom icon when doing that.
(review comment from reviewer) [2021-04-12T13:43:54Z] We don't set a custom icon when setting device class. The frontend should set a custom icon per device class.
```suggestion
    ""date_utc"": [None, DEVICE_CLASS_TIMESTAMP, None, True],
```
(issue comment from author) [2021-04-13T09:16:28Z] @MartinHjelmare Seems that sort & black are flipping stylecodes :O
(issue comment from reviewer) [2021-04-13T13:08:55Z] Make sure your environment is up to date and set up properly. Alternatively check CI output for the correct format and make a commit via github UI.
(issue comment from author) [2021-04-13T19:54:46Z] > Make sure your environment is up to date and set up properly. Alternatively check CI output for the correct format and make a commit via github UI.

Dev env is ok & up-to-date. Black & isort don‚Äôt report any issues in venv. If i fix black issue (seen in CI output) than isort reports errors during commit and vice versa (if i fix isort, than black has an issue; see previous commits)
(issue comment from author) [2021-05-06T06:39:44Z] Bump :)
What is the planning to merge this into the master branch?
(issue comment from reviewer) [2021-05-07T09:45:30Z] Isort check is still failing. We can't merge PRs with failing CI checks.
(issue comment from author) [2021-05-09T10:27:39Z] Did a file edit and commit in the Github UI as @MartinHjelmare proposed. Hope this settles the issue ;D
(issue comment from reviewer) [2021-05-09T15:51:51Z] Thanks!"
70145,Support variables on any action/condition/trigger,2022-04-16 09:58:44+00:00,2023-01-03 23:01:23+00:00,closed,1,2,41,https://github.com/home-assistant/core/pull/70145,New feature (which adds functionality to an existing integration),10,2022-05-27T23:05:04Z,,frenck,"(review comment from reviewer) [2022-04-20T21:00:39Z] I guess the one thing that we should be clear about is _when_ the variables apply. It should be consistently be applied after the step has run in which they are applied.

So applied once the trigger has triggered, the condition check has passed, the service has been executed or the wait for trigger triggered/timed out.
(review comment from author) [2022-04-20T21:47:37Z] Yeah, so the idea is to be clear on / the idea is:

Any variable applied to an action/condition/trigger only applies down the chain.

The fun part: The variable action applies for the script. But we could consider making that globally. Not sure on how to solve that part yet.

However, I think solving scoping all other levels first is important to be able to introduce global scoping (if we ever do that, that is a separate discussion)."
116826,Custom forecast,2024-05-05 00:52:14+00:00,2024-07-07 13:02:26+00:00,closed,1,0,62,https://github.com/home-assistant/core/pull/116826,New feature (which adds functionality to an existing integration),1,2024-07-06T11:53:54Z,weather,kamiyo,"(issue comment from reviewer) [2024-07-06T11:53:54Z] As this PR is dependent on an architectural discussion, I'll go ahead and close this one up for now.

Once the architectural proposal is accepted, we can re-open this PR.

../Frenck"
121835,Add `configuration_url` to QNAP,2024-07-12 06:30:09+00:00,2024-09-24 18:07:57+00:00,closed,2,2,73,https://github.com/home-assistant/core/pull/121835,New feature (which adds functionality to an existing integration),7,2024-09-23T15:07:32Z,qnap,jrieger,"(issue comment from author) [2024-07-12T08:00:03Z] CLA error should be fixed.
(review comment from reviewer) [2024-07-12T14:04:29Z] This integration has quite a good test coverage, can we add test coverage for these lines as well?

../Frenck
(review comment from author) [2024-07-18T14:11:37Z] > This integration has quite a good test coverage, can we add test coverage for these lines as well?

The coordinator is completely untested and I'm a bit stuck here since I'm not a pytest expert. Maybe someone can point me in a direction?"
69220,Add Synchronize inverter clock button,2022-04-03 21:00:29+00:00,2022-08-26 08:05:59+00:00,merged,3,18,143,https://github.com/home-assistant/core/pull/69220,New feature (which adds functionality to an existing integration),87,2022-08-25T05:52:05Z,goodwe,mletenay,"(issue comment from author) [2022-05-05T09:12:44Z] @starkillerOG or anyone else, would you mind taking a look and review ? Thanks.
(review comment from reviewer) [2022-05-13T14:55:47Z] It would probably be a good idea to use a lambda function or just function refrence for this and move the specific call to the ButtonEntityDescription.
That will make it a lot esier to add aditional button entities in the future (withouth having to create seperate classes for all of them).
(review comment from reviewer) [2022-05-13T14:59:33Z] @mletenay for example look at the Netgear integration:

https://github.com/home-assistant/core/blob/184421dae68c8f97d7a9f796e2a26137089de562/homeassistant/components/netgear/button.py#L35-L43

https://github.com/home-assistant/core/blob/184421dae68c8f97d7a9f796e2a26137089de562/homeassistant/components/netgear/button.py#L75-L78
(review comment from author) [2022-05-19T21:52:08Z] Good point, done.
(review comment from reviewer) [2022-05-23T14:09:36Z] The unique ID doesn't need the domain, it's already unique for this domain.
(review comment from author) [2022-08-09T22:21:24Z] Done
(review comment from reviewer) [2022-08-24T10:59:46Z] Why are these split?
(review comment from reviewer) [2022-08-24T11:00:59Z] Is this call really non-blocking? if write_setting perform any io, it should be executed in an exector.
(review comment from reviewer) [2022-08-24T11:03:18Z] Are the changes in this file related to this pull request?
(review comment from author) [2022-08-24T20:39:58Z] Because without it pylance would complain with ""Fields without default values cannot appear after fields with default values"".
It's the same patter of adding non-default/mandatory values as used e.g. in GoodweNumberEntityDescription and I thing also rest of the HA sources.
(review comment from author) [2022-08-24T20:42:19Z] It invokes asyncio method without return value
(review comment from author) [2022-08-24T20:45:07Z] No, not directly.
It was not formally filed as bug and reported only in user forum and I did not want to create another PR and wait few more months to get it in. 
It can be separated if you insist, but I considered it a small bugfix which could be piggybacked int this change.
(review comment from reviewer) [2022-08-24T21:23:12Z] I am not sure i like returning the awaitable that way. But i suppose it might work. I would have just used a standard async function instead of a lambda. Ok.
(review comment from reviewer) [2022-08-24T21:23:33Z] Ok
(review comment from reviewer) [2022-08-24T21:25:51Z] Please raise some error here, so the system knows the entry setup failed.

Poossibly the not ready exception to try again later.
(review comment from reviewer) [2022-08-24T21:27:03Z] If you put it as a separate bugfix, we can get it in in point realeses. So please separate.
(review comment from author) [2022-08-24T21:47:21Z] This is intentional, not all inverter models support this feature, in such case, the button is just not created at all.
This is not exceptional state, this is expected state (in some inverters).
(review comment from author) [2022-08-24T21:52:12Z] I did not meant wait for major release, but wait for review (which takes months ;-)
I will separate it, hoping it will get reviewed sooner ...
(review comment from author) [2022-08-24T22:21:10Z] https://github.com/home-assistant/core/pull/77290"
74454,Add reauthenticaion to `mikrotik`,2022-07-05 08:04:12+00:00,2022-10-03 04:19:10+00:00,merged,6,0,88,https://github.com/home-assistant/core/pull/74454,New feature (which adds functionality to an existing integration),172,2022-10-02T03:37:24Z,,,(issue comment from reviewer) [2022-08-04T12:05:56Z] waiting review
75534,Add RSSI and HEV sensors to LIFX devices,2022-07-20 22:02:02+00:00,2022-10-13 08:21:13+00:00,closed,17,40,40,https://github.com/home-assistant/core/pull/75534,New feature (which adds functionality to an existing integration),730,2022-08-30T09:17:13Z,,,"(issue comment from reviewer) [2022-07-20T22:03:09Z] @bdraco this is my attempt at adding sensor entites. I picked one that is available to all bulbs and some that are only available to a subset of bulbs. In draft fo review so I can fix anything I got wrong. :) 
(review comment from reviewer) [2022-07-20T22:04:10Z] ```suggestion
```
(review comment from reviewer) [2022-07-20T22:04:39Z] ```suggestion
```
(review comment from reviewer) [2022-07-20T22:05:13Z] ```suggestion
```

Set `self.entity_description = description` instead
(review comment from reviewer) [2022-07-20T22:05:56Z] This should be disabled by default so it doesn't generate too many updates in the state machine
```suggestion
    icon=""mdi:wifi"",
    entity_registry_enabled_default=False
```
(review comment from reviewer) [2022-07-20T22:06:29Z] You can set this as `self._attr_device_info = `
(review comment from reviewer) [2022-07-20T22:07:03Z] Heh, it was initially, but I turned that off for testing purposes so I didn't have to manually turn it on for 60 bulbs. üòÇ 
(review comment from reviewer) [2022-07-20T22:07:32Z] We shouldn't poll this unless at least one entity is enabled that needs it
(review comment from reviewer) [2022-07-20T22:07:36Z] We shouldn't poll this unless at least one entity is enabled that needs it
(review comment from reviewer) [2022-07-20T22:08:30Z] Please move code out of the coordinator that won't raise.
```python
            hev_cycle: StateHevCycle = await async_execute_lifx(
                self.device.get_hev_cycle
            )
            last_result: StateLastHevCycleResult = await async_execute_lifx(
                self.device.get_last_hev_cycle_result
            )
```

Then process it in an `else`
(review comment from reviewer) [2022-07-20T22:08:50Z] Yeah, I wasn't sure how to work that out from the coordinator. All my attempts to override `async_update` failed.
(review comment from reviewer) [2022-07-20T22:09:30Z] This is only available to HEV bulbs and they would all have it enabled by default, so if this is called, it's needed.
(review comment from reviewer) [2022-07-20T22:10:26Z] You could keep track of it by adding having the entity tell the coordinator it wants it in `async_added_to_hass` and tell it, it no longer wants it in `async_will_remove_from_hass`

Similar example https://github.com/home-assistant/core/blob/6da25c733e014624564140a761af5201e3bf0adc/homeassistant/components/unifiprotect/entity.py#L217
(review comment from reviewer) [2022-07-20T22:10:59Z] ```suggestion
```
(review comment from reviewer) [2022-07-20T22:11:07Z] ```suggestion
```
(review comment from reviewer) [2022-07-20T22:11:15Z] ```suggestion
```
(review comment from reviewer) [2022-07-20T22:12:37Z] ```suggestion
```

We normally don't set an `icon` if the `device_class` is set. https://developers.home-assistant.io/docs/core/entity#advanced-properties
(review comment from reviewer) [2022-07-20T22:12:44Z] ```suggestion
```


We normally don't set an `icon` if the `device_class` is set. https://developers.home-assistant.io/docs/core/entity#advanced-properties
(review comment from reviewer) [2022-07-20T22:12:49Z] ```suggestion
```
(review comment from reviewer) [2022-07-20T22:13:21Z] ```suggestion
    sensors: list[LifxSensorEntity] = [
```
(review comment from reviewer) [2022-07-20T22:13:53Z] stale debug ?
(review comment from reviewer) [2022-07-20T22:14:25Z] It would be nice if this was a separate function
(review comment from reviewer) [2022-07-20T22:14:56Z] Users can disable the entities
(issue comment from reviewer) [2022-07-20T22:16:07Z] Will try to give you some more feedback tomorrow.  I'm way behind as I've had two A/C units fail this week @ home which is not good in a Texas summer !
(review comment from reviewer) [2022-07-20T22:16:40Z] No. Moving `_LOGGER` to `.const` makes all the logs look like they come from `homeassistant.components.lifx.const` and not the actual file in which it is called. It makes more sense to define it for each file to make debugging a little bit easier.
(issue comment from reviewer) [2022-07-21T04:04:22Z] I have it working as requested, but I'm not sure if I did it properly or not. Decided to stop here and give you a chance to review again before doing anything more.
(review comment from reviewer) [2022-07-21T09:43:05Z] We try to avoid using Throttle in new code

If we need different intervals, usually we use multiple coordinators (example in synology_dsm) or write a custom coordinator. 

It's a bit more difficult here since we need a shared lock but that can be created when all the coordinators are and passed in.

Since they are all similar we could have a base coordinator class and subclass it into a light, hev, and signal coordinators 

The advantage is if you have multiple coordinators you don't have to worry about subscription management since the coordinators don't poll if there are no subscribers.
(review comment from reviewer) [2022-07-21T09:45:06Z] Strictly speaking, we don't need different intervals but then we also don't need to poll for sensor data every 10 seconds either. I'm more worried about the amount of data potentially being stored by the logger for no good reason if we poll too often.
(review comment from reviewer) [2022-07-21T09:47:33Z] We probably don't need to share a lock either: that's only really needed for discovery. Once the transport is unicast UDP, the bulbs tend to respond pretty quickly and can handle up to 20 pkts/second. 

As a reference, the Tile animations generated by Photons send 320 HSBK values every 0.075 seconds. :) 
(review comment from reviewer) [2022-07-21T09:48:52Z] We would be better suited with a global limit of 2-4 inflight (unacknowledged) packets per endpoint, which is automatic in Photons but would have to be added to aiolifx. 
(review comment from reviewer) [2022-07-21T09:49:27Z] Reducing the polling frequency makes a lot of sense here. If you have a lot of bulbs the additional wifi traffic will make a difference on how much reliable your 2.4g network is.
(review comment from reviewer) [2022-07-21T09:52:26Z] Agreed. And it would reduce the amount of potential state data being stored by the logger. I know it's only stored on changes, but given the potential flakiness of LIFX bulbs, the RSSI will change every polling interval for sure.
(issue comment from reviewer) [2022-07-24T05:16:30Z] This is now rebased on top of the Button entity codebase.
(issue comment from reviewer) [2022-07-26T12:00:05Z] @bdraco when you get a chance, could you review the tests I added? I'm fairly certain I picked the least efficient way of testing things, so would appreciate an experienced eye.

On that note, I'll probably stop adding entities until this lot is merged and work on replacing `aiolifx` with Photons or something closely resembling it. 
(issue comment from reviewer) [2022-08-09T18:46:51Z] I won't have time to do a proper review until tomorrow, but in the mean time I'll give feedback on the things I know will require refactoring
(review comment from reviewer) [2022-08-09T18:48:12Z] We don't want to access `hass.data` in tests since thats considered  integration details.

patch the library instead and call async_fire_time_changed

https://developers.home-assistant.io/docs/development_testing?_highlight=writing&_highlight=tests#writing-tests-for-integrations
(issue comment from reviewer) [2022-08-09T21:09:50Z] I'm on leave until next week, so I'll either have plenty of time for this or none at all. üòÑ  Worst case, I'll get back into it next Monday/Tuesday, as I'm away this weekend for sure.
(issue comment from reviewer) [2022-08-15T10:30:26Z] @bdraco I have some personal stuff I need to focus on this week, so I won't have much time to look at this until next week. It can certainly wait, but if you felt like tinkering on it, be my guest.
(issue comment from reviewer) [2022-08-22T10:09:52Z] @bdraco I refactored the HEV sensors into a single binary sensor with extra state attributes which provides a much better user experience (IMO). At a glance, you can see if a HEV cycle is running (and firing automations on start/finish is possible) while still containing enough extra data for dashboard output or statistical analysis.

I realise this PR now has two platforms instead of one, but it would be super peachy keen if I don't have to split it into two seperate PRs.

Updated/new tests still to come.
(issue comment from reviewer) [2022-08-26T18:28:16Z] > @bdraco I refactored the HEV sensors into a single binary sensor with extra state attributes which provides a much better user experience (IMO). At a glance, you can see if a HEV cycle is running (and firing automations on start/finish is possible) while still containing enough extra data for dashboard output or statistical analysis.

Oh no, in general we are moving away from extra state attributes.  They can't be assigned state classes, can't use long term stats, can't be deduplicated in the database, are hard to discover, are more difficult to use in automations for first time users, etc.

> 
> I realise this PR now has two platforms instead of one, but it would be super peachy keen if I don't have to split it into two seperate PRs.
> 
> Updated/new tests still to come.

It would be better to split it into two PRs, but I think you already know that, or you wouldn't have asked.  If everything were super strait-forward here, it would probably be fine, but I don't want either of us to end up frustrated in the review process, so it is probably better to split it up.
(issue comment from reviewer) [2022-08-26T21:17:17Z] > Oh no, in general we are moving away from extra state attributes. They can't be assigned state classes, can't use long term stats, can't be deduplicated in the database, are hard to discover, are more difficult to use in automations for first time users, etc.

These are all the reasons why I switched to them for this, to be honest. But I guess I'll split them back out again and split this PR accordingly. Or close this one and open two new ones or something.
(issue comment from reviewer) [2022-08-30T09:17:13Z] Closing this PR and opening new PRs per platform. First new PR: https://github.com/home-assistant/core/pull/77535"
47951,Add support for bar to pressure unit util,2021-03-15 15:48:34+00:00,2021-09-24 15:01:57+00:00,closed,2,0,191,https://github.com/home-assistant/core/pull/47951,New feature (which adds functionality to an existing integration),19,2021-09-23T14:36:13Z,,bdr99,"(issue comment from reviewer) [2021-03-16T07:23:38Z] Where will we use this?
(issue comment from author) [2021-03-16T10:11:15Z] > Where will we use this?

I'm planning to use it in my Mazda integration, in order to fix https://github.com/home-assistant/home-assistant.io/issues/16999.
(issue comment from reviewer) [2021-03-16T12:46:26Z] Our design currently mandates either hPa or mbar for pressure sensor device class:
https://developers.home-assistant.io/docs/core/entity/sensor#available-device-classes
(issue comment from author) [2021-03-16T14:23:49Z] > 
> 
> Our design currently mandates either hPa or mbar for pressure sensor device class:
> https://developers.home-assistant.io/docs/core/entity/sensor#available-device-classes

Are you implying that `homeassistant.util.pressure` should only be able to convert the units supported by the pressure sensor device class? It currently supports converting between Pa, hPa, mbar, inHg, and psi.

I'm not using the pressure sensor device class in the [tire pressure sensors](https://github.com/home-assistant/core/blob/dev/homeassistant/components/mazda/sensor.py#L140) for the Mazda integration. It seems the pressure sensor device class was designed for atmospheric pressure, making it unsuitable for tire pressure. In the US we measure tire pressure in PSI, and I believe in Europe, bar is used.
(issue comment from reviewer) [2021-03-16T15:16:54Z] We should preferably use the appropriate device class for sensor measurements. If we need a new device class I think we should start in that end before we decide to expand the unit converter. To make sure we add the correct conversion if needed.

Changes to the enity model needs to go via an architecture issue:
https://developers.home-assistant.io/docs/core/entity#changing-the-entity-model
(issue comment from author) [2021-03-16T16:00:15Z] I opened an architecture issue here: https://github.com/home-assistant/architecture/discussions/532
(issue comment from author) [2021-04-15T17:25:29Z] @MartinHjelmare It looks like there hasn't been much activity on the architecture issue recently. Would it be acceptable to merge this simple PR for now, since all it does is expand the capabilities of a util module? We can always refactor things in the future if we decide to add a new device class and/or move the unit conversion logic into the base entity.
(issue comment from reviewer) [2021-04-15T17:41:37Z] > Would it be acceptable to merge this simple PR for now, since all it does is expand the capabilities of a util module

There is an architecture issue open, thus this cannot be merged until that has been resolved.
(issue comment from author) [2021-05-19T14:40:31Z] This PR is still valid and should not be closed. Just waiting for a consensus to be reached on the architecture issue.
(issue comment from author) [2021-06-22T15:04:12Z] Still valid.
(issue comment from author) [2021-09-23T14:36:13Z] It looks like this was added in https://github.com/home-assistant/core/pull/54497, so closing this PR. (Not sure why this PR required an architecture discussion, but that one didn't.)
(issue comment from reviewer) [2021-09-23T14:49:02Z] The pressure conversion was added for another feature, ie not a new pressure device class."
51693,"Add ""auto"" HVAC mode to Advantage Air",2021-06-10 04:06:34+00:00,2021-07-18 03:35:07+00:00,merged,2,2,18,https://github.com/home-assistant/core/pull/51693,New feature (which adds functionality to an existing integration),24,2021-06-28T09:21:25Z,advantage_air,Bre77,"(review comment from reviewer) [2021-06-11T08:17:01Z] I would prefer this as a single base list that HVAC_MODE_AUTO is appended to if it's available, instead of having two copies that need to be kept in sync.
(review comment from author) [2021-06-14T04:01:26Z] @viiru- I have pushed a change to address this.

`if self._ac.get(""myAutoModeEnabled""):
    return AC_HVAC_MODES + [HVAC_MODE_AUTO];
return AC_HVAC_MODES`"
90893,Make repairs out of select supervisor issues,2023-04-06 02:58:12+00:00,2023-04-24 17:48:34+00:00,merged,9,7,13,https://github.com/home-assistant/core/pull/90893,New feature (which adds functionality to an existing integration),1256,2023-04-19T06:07:39Z,hassio,mdegat01,"(review comment from reviewer) [2023-04-12T09:49:22Z] How can it return `dict` when its decorated with `@_api_bool`?
(review comment from author) [2023-04-14T17:07:24Z] It can't. Was left from before. Fixed
(review comment from reviewer) [2023-04-19T06:27:57Z] This method can preferably be a `classmethod` as it returns an instance of the class.
(review comment from reviewer) [2023-04-19T06:28:29Z] Same here.
(review comment from reviewer) [2023-04-19T06:30:17Z] Ternary operator expressions that span more than one line are hard to read.
(review comment from reviewer) [2023-04-19T06:33:04Z] Please break long strings and comments around 88 characters per line.
(review comment from reviewer) [2023-04-19T06:40:02Z] Copying a dict to a set uses the keys by default. We can remove `.keys()`."
104881,Add consider home interval to ping,2023-12-01 15:32:52+00:00,2023-12-23 14:01:46+00:00,merged,7,3,20,https://github.com/home-assistant/core/pull/104881,New feature (which adds functionality to an existing integration),98,2023-12-22T13:50:58Z,ping,jpbede,"(review comment from reviewer) [2023-12-01T19:15:00Z] I am not seeing this option in the platform schema, was it removed in an earlier change?
(review comment from author) [2023-12-01T19:41:07Z] It is included in `BASE_PLATFORM_SCHEMA`, which is extended in line 33.
(review comment from reviewer) [2023-12-01T19:41:59Z] Ah okay
(issue comment from reviewer) [2023-12-01T19:42:57Z] May be you need a docs PR?

(issue comment from author) [2023-12-01T19:44:20Z] > May be you need a docs PR?

A hint to the option in the options flow would indeed not be amiss.
(issue comment from reviewer) [2023-12-08T09:36:37Z] > I don't know if this should be included in version 2023.12, but since it's a new feature, I don't think so.

@jpbede considering this seems to break functionality (updating from 2023.11 to 12), wouldn't it better to include it in the next minor? Or am I missing something and there's a way to replicate `consider_home` in 2023.12 anyway?

(issue comment from reviewer) [2023-12-08T13:21:12Z] > > I don't know if this should be included in version 2023.12, but since it's a new feature, I don't think so.
> 
> @jpbede considering this seems to break functionality (updating from 2023.11 to 12), wouldn't it better to include it in the next minor? Or am I missing something and there's a way to replicate `consider_home` in 2023.12 anyway?

Yes, please, add this fix to the next minor release. This seems to have broken the presence detector tied to my iPhone. 
After the update to 2023.12, my entries have been imported in the UI config flow, and even leaving the consider_home attribute in the ping device_tracker integration yaml config does not seem to have any effect. This results in my iPhone shown as not_home very often, while it has been rock solid for me for years.
(issue comment from reviewer) [2023-12-08T15:19:19Z] Actually, the breakage seems to be worst than I initially thought.
I've tried patching just the core part of the fix proposed with this PR, i.e. the device_tracker.py as follows:
![Screenshot 2023-12-08 at 16 18 11](https://github.com/home-assistant/core/assets/25389602/5d0ff112-8d12-4329-895a-7433959b0d4b)

but after the consider_time that I hardcoded to 10 minutes (600s), my iPhone is still reported as offline from time to time.
I've had a look at the main PR that adds config flow to Ping integration (PR #103743), and it seems changes are quite extensive there.
I'm afraid this PR might have introduced a regression in this component.
As I said, this integration has been rock solid for years, but now it seems broken.

(issue comment from reviewer) [2023-12-08T16:06:15Z] @quaqo @LeoCal The PR owner does not control what version it gets merged into.  Please do not crowd PRs with off topic posts.
(issue comment from reviewer) [2023-12-08T16:06:29Z] Ok, just to add some more data points to this: I've started experiencing flakiness with ping integration starting from 2023.12.0. Before that, and up to 2023.11.3, there was no flakiness at all."
79430,Add Switcher runner support,2022-10-01 19:46:11+00:00,2022-10-14 22:01:51+00:00,merged,4,5,12,https://github.com/home-assistant/core/pull/79430,New feature (which adds functionality to an existing integration),334,2022-10-13T21:20:13Z,,,"(issue comment from reviewer) [2022-10-01T19:46:15Z] Hey there @tomerfi, mind taking a look at this pull request as it has been labeled with an integration (`switcher_kis`) you are listed as a [code owner](https://github.com/home-assistant/core/blob/dev/CODEOWNERS#L1109) for? Thanks!
(review comment from reviewer) [2022-10-11T04:37:14Z] ```suggestion
```


(review comment from reviewer) [2022-10-11T04:37:47Z] maybe better as `SwitcherCoverEntity` class attribute
(review comment from reviewer) [2022-10-11T04:40:33Z] ```suggestion
    _attr_supported_features: int = (
        CoverEntityFeature.OPEN
        | CoverEntityFeature.CLOSE
        | CoverEntityFeature.SET_POSITION
        | CoverEntityFeature.STOP
    )

```
(review comment from reviewer) [2022-10-11T06:46:03Z] Thanks, moved
(review comment from reviewer) [2022-10-13T20:52:56Z] maybe make this string a constant ?
(issue comment from reviewer) [2022-10-13T21:16:10Z] Thanks!"
50107,Add climate domain to template integration,2021-05-05 08:31:59+00:00,2022-01-12 08:01:58+00:00,closed,3,0,250,https://github.com/home-assistant/core/pull/50107,New feature (which adds functionality to an existing integration),483,2022-01-11T07:05:13Z,climate,davidlang42,"(issue comment from author) [2021-06-11T22:17:14Z] Hi @PhracturedBlue @tetienne is there any chance one of you could review this? It fills an important gap in the built in template integration and followed all the same paradigms as the existing template code. Should be a quick one!
(issue comment from reviewer) [2021-07-05T07:25:12Z] @frenk This PR could also be a case of wrong codeowner tagging. Could you tag the correct one please so it can go forward ? Thanks.
(issue comment from reviewer) [2021-07-05T08:19:37Z] @davidlang42 It seems that the bot tagged the wrong people. That may explain why this PR has less exposure than you expect. AFAIU from commits and comments @emontnemery is the code owner of the template integration.
(issue comment from author) [2021-07-05T08:25:56Z] Thanks @FrnchFrgg, I appreciate the help!
@emontnemery, let me know if there is anything you'd like changed- I've tried to mimic the other template entities very closely.
(issue comment from reviewer) [2021-07-05T09:37:00Z] @PhracturedBlue and @tetienne are listed as codeowners for the `template` integration, I'm not sure why they've not been tagged by the bot
(issue comment from reviewer) [2021-07-05T09:37:43Z] (Close + open to retrigger CI)
(issue comment from reviewer) [2021-07-05T09:44:57Z] Three general comments:
- Please update the PR to make use of the `_attr-*` attributes, for example drop the `def name()` and replace it with just assigning to `self._attr_name`.
- Don't do unconditional optimistic state updates, for example in `async_set_fan_mode`, only update `self._fan_mode` if there is no `self._fan_mode_template`
- Please add tests
(issue comment from reviewer) [2021-07-06T09:24:29Z] @emontnemery I think a more pressing problem is that you were not tagged, neither in this PR nor in others about the template integration where @PhracturedBlue and @tetienne were tagged automatically.
(issue comment from reviewer) [2021-07-06T14:32:47Z] @FrnchFrgg I'm not listed as a codeowner of the template integration though, so it's correct that I'm not tagged
https://github.com/home-assistant/core/blob/81fe3583c9b2a070fa301330529d61f08d91e5dd/homeassistant/components/template/manifest.json#L5

This PR adds @home-assistant/core as codeowner: https://github.com/home-assistant/core/pull/52592

(I've hidden most of the discussion about codeowners as off topic)
(issue comment from reviewer) [2021-10-05T14:55:06Z] @davidlang42 Please see my comments here: https://github.com/home-assistant/core/pull/50107#issuecomment-873970660, the first one is a matter of style so not required but number 2 or 3 needs to be addressed.
(issue comment from author) [2021-10-06T01:34:19Z] > @davidlang42 Please see my comments here: [#50107 (comment)](https://github.com/home-assistant/core/pull/50107#issuecomment-873970660), the first one is a matter of style so not required but number 2 or 3 needs to be addressed.

Thanks @emontnemery , I fully intend to finish this off but unfortunately I've got my university thesis due on 9th November so will be prioritising that for the next month. Is it possible to keep this PR open for another month? If not, that's okay, I'll just start a new one when I can finish it
(issue comment from reviewer) [2021-10-06T06:53:44Z] @davidlang42 sure, no problem üëç "
127948,Create repair asking user to remove duplicate config entries,2024-10-08 17:18:33+00:00,2024-10-30 15:32:30+00:00,merged,4,0,20,https://github.com/home-assistant/core/pull/127948,New feature (which adds functionality to an existing integration),248,2024-10-29T12:10:57Z,homeassistant,emontnemery,"(issue comment from author) [2024-10-08T18:23:37Z] Needs https://github.com/home-assistant/core/pull/127949 for tests to pass
(issue comment from reviewer) [2024-10-30T15:23:56Z] ~Note: this created some unused snapshots.~
```
4 snapshots unused.
Unused test_as_dict, test_unique_id_collision_issues, test_unique_id_collision_issues.1, test_unique_id_collision_issues.2 (tests/snapshots/test_config_entries.ambr)
```

~See #129311 and https://github.com/home-assistant/core/actions/runs/11595642782/job/32285212462~

Edit: or maybe it is a bug in the implementation of 129311..."
118544,Add Home Connect child lock,2024-05-31 09:24:33+00:00,2024-06-22 12:02:31+00:00,merged,2,0,21,https://github.com/home-assistant/core/pull/118544,New feature (which adds functionality to an existing integration),45,2024-06-21T11:26:37Z,home_connect,erwindouna,
120886,Add config flow for platform button in Template,2024-06-30 21:50:37+00:00,2024-07-10 20:01:53+00:00,merged,8,2,8,https://github.com/home-assistant/core/pull/120886,New feature (which adds functionality to an existing integration),437,2024-07-09T19:20:19Z,template,dougiteixeira,"(review comment from author) [2024-06-30T21:51:42Z] This is being changed by #120884 to not be part of this PR.
(review comment from author) [2024-06-30T22:04:39Z] This is being changed by #120889 to not be part of this PR."
75260,Add bypass to oscillate function for zehnder comfoconnect,2022-07-15 11:30:07+00:00,2022-12-20 13:05:27+00:00,closed,1,0,157,https://github.com/home-assistant/core/pull/75260,New feature (which adds functionality to an existing integration),14,2022-12-19T12:13:08Z,,,"(issue comment from reviewer) [2022-07-15T11:36:04Z] First contribution to home assistant.
First step is to add the ability to control the bypass to the oscillate function of the entity that also control the speed.
End goal for my contribution is that update the zehnder integration to the latest standards, flow control, add entities trough configuration. (so removing them from the yaml configuration file), and provide a means to set a update interval for this integration. (as the current integration update at every update of the unit, so at least every second).
So any help is welcome. I'm willing to put the time in. I'm a HA user for 2 years now, but git/python is new, (but i have other programming experience.)
(issue comment from reviewer) [2022-08-14T13:17:11Z] Can somebody please take a look at this, i would really like to see that this get added to HA.
(issue comment from reviewer) [2022-08-14T17:56:19Z] > Can somebody please take a look at this, i would really like to see that this get added to HA.

I'm looking into using the new Cloud API that Zehnder has created. This allows me to use cleaner code. The current library is quite messy. I was planning on improving this (especially using asyncio), but I couldn't find the time.
(issue comment from reviewer) [2022-08-14T17:57:36Z] Regarding this PR, I appreciate the effort, but using an oscillate method to control something else is not okay. It would have to be another entity, like a select (on, off, auto) or a switch (on, off).
(issue comment from reviewer) [2022-09-08T12:50:03Z] Okay i understand you point, BUT,
What is the problem with adding this now and based on the above messages, a new integration will be made that uses the new zehnder API. So my point is that we add this PR to HA, and in time a new integration will replace this one that uses the new API.
Would that be something?
(issue comment from reviewer) [2022-09-08T14:46:13Z] It's not just me. This won't be accepted into the Home Assistant codebase. 

I'm also not planning to abandon the local API. The public API would probably be a different integration.
(issue comment from reviewer) [2022-12-19T12:13:08Z] @frank8the9tank This has been implemented (in a different way) in my new custom integration that I hope to submit as a replacement after some more testing.

I'll close this PR, but thanks a lot for your time and patience in this!

If you want, you can install the update trough HACS.

See https://github.com/michaelarnauts/home-assistant-comfoconnect for more information.

You can discuss this at the topic here: https://community.home-assistant.io/t/zehnder-comfoconnect-component/82522/82?u=michaelarnauts"
123311,Add Valve platform to Matter integration,2024-08-07 21:50:47+00:00,2024-09-26 19:06:40+00:00,merged,5,26,48,https://github.com/home-assistant/core/pull/123311,New feature (which adds functionality to an existing integration),550,2024-09-25T18:19:10Z,matter,lboue,"(issue comment from author) [2024-08-08T05:43:34Z] Hello,

In HA, the Valve type is shared with water and gas but not in Matter specs.
Do you have any recommendations regarding this addition to support Matter WaterValve device type?

(review comment from reviewer) [2024-08-09T10:33:34Z] Only add attributes here that are mandatory in the spec
(review comment from reviewer) [2024-08-09T10:34:05Z] why is this ?
(review comment from reviewer) [2024-08-09T10:35:31Z] this needs to be in the calculate features
(review comment from reviewer) [2024-08-09T10:36:19Z] no need to set this in each atrribute callback, move it to the ValveEntityDescription
(review comment from reviewer) [2024-08-09T10:37:21Z] ```suggestion
    """"""Currently ongoing operations enumeration for Matter water valve.""""""
```
(review comment from reviewer) [2024-08-09T10:38:13Z] If this is dynamic, move it to the ""calculate_features"" logic. We can also extend the discovery schema logic to move it there
(review comment from reviewer) [2024-08-09T10:43:39Z] ```suggestion
```
(review comment from author) [2024-08-09T12:20:18Z] I mixed it with the file used as an example: cover.py
(issue comment from author) [2024-08-09T14:33:16Z] It sould be OK now.
(issue comment from author) [2024-09-25T05:16:13Z] Thanks Marcel
(review comment from reviewer) [2024-09-25T12:42:34Z] ```suggestion
ValveConfigurationAndControl = clusters.ValveConfigurationAndControl
```
(review comment from reviewer) [2024-09-25T12:43:40Z] ```suggestion
        if feature_map & ValveConfigurationAndControl.Bitmaps.Feature.kLevel:
```
(review comment from reviewer) [2024-09-25T12:44:18Z] ```suggestion
ValveStateEnum = ValveConfigurationAndControl.Enums.ValveStateEnum
```
(review comment from reviewer) [2024-09-25T12:44:35Z] ```suggestion
            ValveConfigurationAndControl.Commands.Open()
```
(review comment from reviewer) [2024-09-25T12:44:51Z] ```suggestion
            ValveConfigurationAndControl.Commands.Close()
```
(review comment from reviewer) [2024-09-25T12:45:03Z] ```suggestion
            ValveConfigurationAndControl.Commands.Open(targetLevel=position)
```
(review comment from reviewer) [2024-09-25T12:45:21Z] ```suggestion
            ValveConfigurationAndControl.Attributes.CurrentState
```
(review comment from reviewer) [2024-09-25T12:45:30Z] ```suggestion
            ValveConfigurationAndControl.Attributes.TargetState
```
(review comment from reviewer) [2024-09-25T12:45:48Z] ```suggestion
                ValveConfigurationAndControl.Attributes.CurrentLevel
```
(review comment from reviewer) [2024-09-25T12:45:59Z] ```suggestion
                ValveConfigurationAndControl.Attributes.FeatureMap
```
(review comment from reviewer) [2024-09-25T12:46:24Z] ```suggestion
            ValveConfigurationAndControl.Attributes.CurrentState,
            ValveConfigurationAndControl.Attributes.TargetState,
```
(review comment from reviewer) [2024-09-25T12:46:33Z] ```suggestion
            ValveConfigurationAndControl.Attributes.CurrentLevel,
```
(review comment from reviewer) [2024-09-25T12:48:30Z] We're missing tests for a device that supports set position.
(review comment from reviewer) [2024-09-25T12:50:45Z] We're missing tests for state updates.
(review comment from reviewer) [2024-09-25T12:51:51Z] ```suggestion
        await self.send_device_command(ValveConfigurationAndControl.Commands.Open())
```
(review comment from reviewer) [2024-09-25T12:52:05Z] ```suggestion
        await self.send_device_command(ValveConfigurationAndControl.Commands.Close())
```
(review comment from reviewer) [2024-09-25T12:52:45Z] ```suggestion
        optional_attributes=(ValveConfigurationAndControl.Attributes.CurrentLevel,),
```
(review comment from reviewer) [2024-09-25T15:08:48Z] tests added
(issue comment from reviewer) [2024-09-25T16:14:24Z] > I think we should either add tests for a device that supports set position or remove that support.

Problem is that most of all integration support is based on theoretical specs and we know if it works once the first device pops up. 

Maybe the device in the dump actually has set_position support btw 
(issue comment from reviewer) [2024-09-25T16:22:46Z] > I think we should either add tests for a device that supports set position or remove that support.

tests added for position"
115715,Add more supervisor info to system info panel,2024-04-16 20:03:28+00:00,2024-05-29 16:02:16+00:00,merged,13,1,41,https://github.com/home-assistant/core/pull/115715,New feature (which adds functionality to an existing integration),147,2024-05-28T14:14:42Z,hassio,mdegat01,"(review comment from reviewer) [2024-04-22T13:27:36Z] Let's add Supervisor internet connection info here too. You've already added `supervisor_internet` in the test below, so I assume you had in mind?"
89277,Add door lock device type to matter integration,2023-03-07 10:06:02+00:00,2023-03-28 16:38:59+00:00,merged,6,16,13,https://github.com/home-assistant/core/pull/89277,New feature (which adds functionality to an existing integration),774,2023-03-21T00:29:34Z,matter,ArturoGuerra,"(review comment from reviewer) [2023-03-07T10:20:50Z] ```suggestion
        # restrict device type to prevent discovery by the wrong platform
```
(review comment from reviewer) [2023-03-07T10:23:35Z] ```suggestion
```
(review comment from reviewer) [2023-03-07T10:23:48Z] ```suggestion
```
(review comment from reviewer) [2023-03-07T10:25:16Z] ```suggestion
        # LockState is a required attribute in the discovery schema.
        assert lock_state is not None
```
(review comment from reviewer) [2023-03-07T10:25:58Z] Can this happen?
(review comment from reviewer) [2023-03-07T10:28:14Z] Please break long strings and comments around 88 characters per line at minimum. Docstrings should not be longer than 72 characters per line according to PEP8.

```suggestion
    """"""Temp enum that represents the features of a door lock.

    Should be replaced by the library provided one once that is released.
    """"""
```
(review comment from reviewer) [2023-03-07T10:33:18Z] ```suggestion
        # restrict device type to prevent discovery by the wrong platform
```
(review comment from reviewer) [2023-03-07T10:36:08Z] Can we use a base 10 integer (257) instead?
(review comment from reviewer) [2023-03-07T10:38:14Z] I'd import and compare with the lock state constants, `STATE_LOCKED` etc.
(review comment from author) [2023-03-07T23:55:28Z] Yeah sorta, it can happen when the device is transitioning from a locked to an unlocked state or vise-versa I just don't think there is a nice way to handle that state. other than ignoring it since it doesn't tell you what the current state is so setting the is_unlocking/is_locking attributes is not really possible and won't be 100% accurate 
(review comment from reviewer) [2023-03-08T02:45:44Z] What other device states are there?

We do know what the current entity state is, if that helps?
(review comment from reviewer) [2023-03-08T02:48:10Z] This is a common state found in the const.py module.
(review comment from author) [2023-03-08T04:54:55Z] The only other state is not fully locked, ill see if I can maybe use it to set the is_unlocking and is_locking attributes
(review comment from reviewer) [2023-03-08T08:29:13Z] ```suggestion
            if self.is_locked is True:
```
(review comment from reviewer) [2023-03-08T08:29:31Z] ```suggestion
            elif self.is_locked is False:
```
(review comment from reviewer) [2023-03-08T08:31:24Z] I don't think we need a warning. Unknown state is a known concept in Home Assistant. Keep the comment but move it above the state attribute modification in this block.
(issue comment from reviewer) [2023-03-09T06:00:00Z] Please link a docs PR that adds lock to the `ha_platforms` front matter at the top of the page.
(issue comment from reviewer) [2023-03-09T06:00:44Z] When ready please make this PR ready for review again.
(issue comment from author) [2023-03-09T06:37:25Z] Yeah just waiting on @marcelveldt to test it with a physical lock want to make sure it behaves correctly once a pin is set
(issue comment from reviewer) [2023-03-20T21:59:06Z] > Yeah just waiting on @marcelveldt to test it with a physical lock want to make sure it behaves correctly once a pin is set

Like discussed on discord, the testing with the real device did not go well but not the PR but the lock is to blame. As this PR is about laying foundation and that initial tests with the test app, I'd say we continue with this PR and merge it once the docs are ready. 

I will make sure to test the real lock device once that is possible and I'll PR any follow up changes that may come from that."
48344,Add support for Suppla POWERSWITCH device type,2021-03-25 23:20:37+00:00,2021-05-04 10:01:45+00:00,closed,1,0,38,https://github.com/home-assistant/core/pull/48344,New feature (which adds functionality to an existing integration),1,2021-05-03T09:56:13Z,supla,mkrzywie,"(issue comment from reviewer) [2021-03-25T23:20:38Z] Hi @mkrzywie, 

It seems you haven't yet signed a CLA. Please do so [here](https://home-assistant.io/developers/cla_sign_start/?pr=home-assistant&#x2F;core#48344).

Once you do that we will be able to review and accept this pull request.

Thanks!

(issue comment from author) [2021-04-25T06:00:59Z] It's simple change - easy review. Could someone take a look?
(issue comment from reviewer) [2021-04-26T07:54:54Z] Hi! Thanks for the patch! I don't have any Supla switches of this type, so I can not test it. But as far as I can tell, it will not break anything for people not using it so Looks Good To Me.
(issue comment from author) [2021-05-03T09:59:06Z] Will keep it private"
74258,Add Aladdin Connect wifi_rssi and battery_level sensors,2022-06-30 15:58:47+00:00,2022-07-15 13:16:33+00:00,merged,3,14,13,https://github.com/home-assistant/core/pull/74258,New feature (which adds functionality to an existing integration),130,2022-07-14T09:09:28Z,,,"(review comment from reviewer) [2022-06-30T16:44:24Z] Please revert this change.
(review comment from reviewer) [2022-06-30T16:45:34Z] Please disable this entity by default with the `entity_registry_enabled_default` description attribute.

RSSI measurements are known to be spammy and not interesting for the normal user.
(review comment from reviewer) [2022-06-30T16:49:50Z] Please use the entity description to set the correct native unit of measurement.

https://github.com/home-assistant/core/blob/d38e8e213a0434f53dd043ac2c9976c761dd9476/homeassistant/components/sensor/__init__.py#L255
(review comment from reviewer) [2022-06-30T16:54:34Z] Please add a custom attribute that holds a function that accepts the client and more parameters as needed and returns the correct device data, in a mixin dataclass for the entity description.

Example:

https://github.com/home-assistant/core/blob/d38e8e213a0434f53dd043ac2c9976c761dd9476/homeassistant/components/wled/sensor.py#L34-L60
(review comment from reviewer) [2022-07-13T09:23:35Z] This change is already merged into dev branch. Please rebase the PR branch on latest dev branch.
(review comment from reviewer) [2022-07-13T09:24:28Z] Can we remove this?
```suggestion
```
(review comment from reviewer) [2022-07-13T09:32:19Z] ```suggestion
        name=""Battery level"",
```
(review comment from reviewer) [2022-07-13T09:32:35Z] ```suggestion
        name=""Wi-Fi RSSI"",
```
(review comment from reviewer) [2022-07-13T09:33:27Z] Missing state class

```suggestion
        native_unit_of_measurement=PERCENTAGE,
        state_class=SensorStateClass.MEASUREMENT,
```
(review comment from reviewer) [2022-07-13T09:36:11Z] Ideally, this PR should add/set DeviceInfo, which would allow using the entity naming style correct as well (resulting in the removal of the _attr_name line).

<https://developers.home-assistant.io/blog/2022/07/10/entity_naming>

Besides, it opens up device automations and makes it show up as an actual device in the UI as well.
(review comment from reviewer) [2022-07-13T17:15:22Z] I think I did this right... 
(review comment from reviewer) [2022-07-13T21:11:30Z] Please put this property below the init method.
(review comment from reviewer) [2022-07-13T21:15:22Z] We also need to set `self._attr_has_entity_name` to True.

https://developers.home-assistant.io/docs/core/entity/#entity-naming
(review comment from reviewer) [2022-07-13T23:45:27Z] That explains why the entity names were not ""right""/changed - thanks for the feedback."
98164,Migrate Epson to has entity name,2023-08-10 11:44:23+00:00,2023-11-27 22:05:36+00:00,merged,2,11,107,https://github.com/home-assistant/core/pull/98164,New feature (which adds functionality to an existing integration),88,2023-11-26T10:42:30Z,epson,joostlek,"(issue comment from author) [2023-08-20T20:53:35Z] There's a function after the `__init__` that sets the unique id if it's not set, so every Epson projector has an unique_id
(issue comment from reviewer) [2023-08-20T21:21:26Z] Yes, I see that, but what calls it?  All the device info assignment is skipped if there is no unique_id set at first init. Am I missing something?
(review comment from reviewer) [2023-08-24T17:57:28Z] This is only used for the device, and thus can be committed, as de device name will automatically fallback to the entry title.
(review comment from reviewer) [2023-08-24T17:57:39Z] Related to the above comment.
(review comment from reviewer) [2023-08-25T08:30:41Z] Why was this check removed?
(review comment from author) [2023-08-25T08:40:46Z] Because this is set in the config entry. And if it wasn't present, there's a function here that restores that unique id if it wasn't set for some reason
(review comment from reviewer) [2023-08-25T08:41:46Z] Right, but looking upstream, it seems that the method that gets the serial can return `None`?
(review comment from reviewer) [2023-08-25T08:47:32Z] fyi projector returns serial only if it's turned on and only if it is newer model. Olders models don't return anything on serial request.
(review comment from author) [2023-08-25T08:48:58Z] So older models don't have any unique_id?
(review comment from reviewer) [2023-08-25T08:51:54Z] Ok, sorry, my review comment earlier https://github.com/home-assistant/core/pull/98164#pullrequestreview-1575659064 might have led down an unhelpful path.  If there is a scenario that can result in SN=`None`, then the check is needed, but how would all the other parameters (model mfr etc) be set in that case?

Maybe set `manufacturer` and `model` in all cases, and set `identifiers`, `via_device` only when you have a unique id during init?  

Sorry, my understanding of how this all works is not complete.
(review comment from author) [2023-08-25T09:08:35Z] I haven't seen a device without identifiers yet, so I am not 100% sure if that works like expected. My current suggestion is to use the entry id if there is no unique id available, what do we think about that?
(review comment from reviewer) [2023-08-25T09:43:44Z] Indeed if the projector is 'busy' [it could return SN=`None`](https://github.com/pszafer/epson_projector/blob/f9efe665e3a3b379bf1d7f637b87b66ac18a7ddd/epson_projector/projector_serial.py#L141) 

Can a pytest be added to verify that everything still works if no serial number is returned?  It feels like this is a scenario we need to remain compliant with in the future.
(review comment from reviewer) [2023-11-26T21:35:13Z] Please only refer to `Entity` instances as `entity`. Rename this to eg `entity_entry`."
88603,Add support for bluetooth pairing in esphome,2023-02-22 14:09:23+00:00,2023-03-08 01:29:34+00:00,merged,1,0,12,https://github.com/home-assistant/core/pull/88603,New feature (which adds functionality to an existing integration),25,2023-03-07T00:24:36Z,esphome,bdraco,"(issue comment from author) [2023-03-06T22:54:07Z] I think we should do the `aioesphomeapi` bump in a fresh PR in case we need to backport more fixes to 2023.3.x so whoever is doing a patch release doesn't have to deal with cherry-pick pain if there is a conflict.
(issue comment from author) [2023-03-06T22:55:16Z] I'll push another branch shortly
(issue comment from author) [2023-03-06T22:55:39Z] https://github.com/home-assistant/core/pull/89262"
