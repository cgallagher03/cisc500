PR Number,Title,Created At,Updated At,State,Files Changed,Total Comments,Decision Time,URL,Type of Change,LOC Changed,Closed Date,Integration,Author,Formatted Comments,Categorized Challenges
113882,Unsupported if wrong image used on virtualization,2024-03-20 14:26:34+00:00,2024-04-23 15:36:46+00:00,merged,1,1,27,https://github.com/home-assistant/core/pull/113882,New feature (which adds functionality to an existing integration),4,2024-04-16T15:54:49Z,hassio,mdegat01,"(review comment from reviewer) [2024-04-16T14:26:57Z] Nit, align wording with the one used in the more info page (https://www.home-assistant.io/more-info/unsupported/virtualization_image):

```suggestion
      ""description"": ""System is unsupported because the Home Assistant OS image in use is not intended for use in a virtualized environment. Use the link to learn more and how to fix this.""
```


(issue comment from reviewer) [2024-04-23T14:42:04Z] Removed this one from the milestone. The translations are fed by this, but it isn't used by core itself.

As translations are updated (separately), they will stay land in 2024.4.4
(issue comment from reviewer) [2024-04-23T15:36:45Z] I guess I am not really worried about actual translation, more that currently it generates empty dialogs, if I am not mistaken. So even if just English is shown, it would be an improvement.

But maybe if translation run isn't run, it would stay like that anyways? :thinking: ","['Documentation and Communication', 'User Experience']"
95206,Issues template function,2023-06-25 18:08:46+00:00,2024-03-05 14:02:09+00:00,merged,2,11,252,https://github.com/home-assistant/core/pull/95206,New feature (which adds functionality to an existing integration),90,2024-03-04T13:22:14Z,,RoboMagus,"(review comment from reviewer) [2023-06-28T13:30:55Z] Please don't add comments, do a self-review instead where you add questions or remarks
(review comment from reviewer) [2023-06-28T13:31:10Z] This seems pointless
(review comment from author) [2023-06-28T13:46:13Z] Often only functions should be used on objects to get data from them rather than just grabbing into the internal data members. Hence the function (That is used by the template `{{ issues() }}`).
(review comment from author) [2023-06-28T13:57:37Z] Alright, removing that.

It's an open question based on an earlier PR thread relating event firing: https://github.com/home-assistant/core/pull/94393#issuecomment-1594720799, where @bdraco mentions the cost of firing events rather than using specifically registered callbacks.

I'm comparing the `issue_registry` here to `persistent_notifications` that use callback registration instead of these event firings and it seems to be something the issues component should use as well. Though admittedly that should be a separate PR.
(review comment from reviewer) [2023-06-28T14:05:29Z] Issues are expected to be much more rare so firing an event shouldn't be a problem.  It might only become a problem if they update from a 3 year old install but than it's only a problem once and not really a big deal 
(review comment from reviewer) [2023-06-28T14:29:42Z] I don't agree, if we don't want the `issues` attribute to be accessed it should be renamed to `_issues` + some getter added, but that's beside the point of this PR.
(issue comment from author) [2023-07-01T08:58:26Z] I'm seeing issues with the CI Pytest timing out.
Not sure what this is about, but it does not seem related to the proposed changes.


(issue comment from author) [2023-07-04T10:48:15Z] Looking at the service return values coming in 2023.7.x, that may be a better approach for getting at issues compared to exposing it as a template.
Thought?

I'm guessing with the new release only being a day away this PR won't make the cut, so that gives me some time to change the implementation. ;)
Otherwise it would have been great to get all actionable notification types (this and the persistent notifications) available to users in this release. 
(issue comment from author) [2023-07-16T14:16:35Z] > Looking at the service return values coming in 2023.7.x, that may be a better approach for getting at issues compared to exposing it as a template.

After playing around with the `ServiceResponse` implementation for a bit I personally feal like a template remains the best way to expose this information, as otherwise we would be too restricted (essentially just automations).
(issue comment from author) [2023-07-26T13:56:51Z] @bdraco, The architecture discussion was for allowing other components to register template functions which would indeed be a whole other level of complexity. However, as the issue registry already exists as a helper, exposing its functionality in the template environment is not as far fetched.

I'm open to alternatives for getting the `issues` information accessible to users (mostly for automation purposes), but as stated in my last comment registering a service in order to get this information out might be too limiting.

Simplifiction of the templates and reducing the (performance) impact of all the globals registrations is a separate issue a.f.a.i.c.
(issue comment from author) [2023-12-29T10:24:50Z] > @bdraco, The architecture discussion was for allowing other components to register template functions which would indeed be a whole other level of complexity. However, as the issue registry already exists as a helper, exposing its functionality in the template environment is not as far fetched.
> 
> I'm open to alternatives for getting the `issues` information accessible to users (mostly for automation purposes), but as stated in my last comment registering a service in order to get this information out might be too limiting.
> 
> Simplifiction of the templates and reducing the (performance) impact of all the globals registrations is a separate issue a.f.a.i.c.

Thoughts on alternatives that allows users to access current `issues`? 
(issue comment from reviewer) [2024-02-15T19:30:48Z] We discussed this in the core team and concluded the proposal is OK, as pointed out by @RoboMagus the new template function is well aligned with the existing `areas` function.
(review comment from reviewer) [2024-02-16T07:29:57Z] How is this useful as a filter?
(review comment from author) [2024-02-17T11:04:01Z] Unsure what you mean, but this format is kept in line with the others, e.g. `areas` and `area_id`.
(review comment from reviewer) [2024-02-26T18:36:20Z] adding this to `filters` means the `issues` function can be called by using Jinja's [filter syntax](https://jinja.palletsprojects.com/en/3.1.x/templates/#filters), `|`

I don't see how this is useful for the `issues` function, and I don't think it's useful for `areas` either.
(review comment from reviewer) [2024-02-27T07:28:53Z] I think we should remove this
```suggestion
```
(review comment from author) [2024-02-29T12:10:57Z] Ah, got it. Thanks for clarifying üëç 

(issue comment from reviewer) [2024-02-29T12:36:38Z] @RoboMagus I can't find a link to a documentation PR, have you created one already? If not, we need something similar to what's documented for the area registry related templates: https://www.home-assistant.io/docs/configuration/templating/#areas
Make sure your documentation PR is based on, and targets, the `next` branch :+1:
(issue comment from author) [2024-03-02T22:39:23Z] > @RoboMagus I can't find a link to a documentation PR, have you created one already? If not, we need something similar to what's documented for the area registry related templates: https://www.home-assistant.io/docs/configuration/templating/#areas Make sure your documentation PR is based on, and targets, the `next` branch üëç

Lost track on that, since it's already an older PR. Thanks for the heads-up @emontnemery.
Documentation PR now added: home-assistant/home-assistant.io#31712","['Process Delays', 'Technical Challenges', 'Documentation and Communication']"
101190,Add entity_registry cleaning to Plugwise,2023-10-01 08:20:35+00:00,2023-11-11 10:01:58+00:00,closed,9,8,40,https://github.com/home-assistant/core/pull/101190,New feature (which adds functionality to an existing integration),106,2023-11-10T09:51:31Z,plugwise,bouwew,"(issue comment from author) [2023-10-01T08:23:12Z] Adding to the ongoing beta, or to a 2023.10.x release would be appreciated, thanks!
(review comment from reviewer) [2023-10-09T09:52:41Z] We should check the registry to see if the mocked device is removed instead of checking a total.

(review comment from reviewer) [2023-10-09T09:54:17Z] - I don't think dummy was supposed to be here?
- Also, it shouldn't be needed to track these? Feels weird?
(review comment from author) [2023-10-09T11:33:45Z] On the use of ""dummy"", the init needs to have the strings in place, I could change it to `{("""","""")}` that works too.
But `{()}` doesn't work, mypy is not happy with this.

Not needed to track these: you mean track the `self.current_entities`? 
This self contains the set of actual entities created during the initialization of the integration.
This set is compared to what is present in the entity_registry, if there are more entities present in the entity_registry then in the set, it means some cleaning can be done.
(review comment from author) [2023-10-09T11:34:35Z] Yes, sure, will update the test later today.
(review comment from author) [2023-10-09T16:09:56Z] Updated as suggested.
(review comment from author) [2023-10-09T16:28:24Z] @frenck I'm seeing that ISY994 uses this as init:
```
        current_unique_ids: set[tuple[Platform, str]] = {
            (Platform.BUTTON, f""{self.uuid}_query"")
        }
```
I can follow this idea and create a better but still a dummy entry in the set.
The dummy can be there, it does not harm anything because the difference-function in this `set(entities.keys()).difference(isy_data.unique_ids)` only leaves the entities that are present in the entity_registry and that are not present in the set with current_unique_ids.
(review comment from author) [2023-10-09T17:55:02Z] Some improvements have been implemented.
(review comment from author) [2023-10-12T11:01:36Z] @frenck looking forward to receiving your feedback on the latest changes :)
(issue comment from author) [2023-11-10T09:51:31Z] Let's retract this PR, plan is to implement device-removal instead.","['Process Delays', 'Technical Challenges', 'Documentation and Communication']"
91081,Move BMW Target SoC to number platform,2023-04-08 12:27:11+00:00,2023-12-21 14:19:57+00:00,merged,11,16,21,https://github.com/home-assistant/core/pull/91081,New feature (which adds functionality to an existing integration),397,2023-04-29T15:41:34Z,bmw_connected_drive,rikroe,"(review comment from reviewer) [2023-04-25T07:58:37Z] We can just implement the `native_value` property method instead in this case.
(review comment from reviewer) [2023-04-25T08:30:54Z] If we never use the key in the `NUMBER_TYPES` dict, it doesn't need to be a dict. It could be a tuple, eg.
(review comment from reviewer) [2023-04-25T20:29:26Z] We don't seem to need the check. We can just return the value regardless if it's None or not.
(review comment from author) [2023-04-25T20:35:18Z] üëç just figured that out on my own. Sorry for the commit spam, currently sitting in the train and the internet isn't fast enough to setup the full development environment on my work laptop... 
(review comment from reviewer) [2023-04-25T20:40:13Z] This is now no longer needed

```suggestion
```
(review comment from reviewer) [2023-04-25T20:40:37Z] What is this call fails? Can it raise? should it be handled?
(review comment from author) [2023-04-25T20:54:11Z] The library could raise a `ValueError` in case the given number is not a multiple of 5. 
If communication with the BMW APIs fail, multiple errors could be raised: `httpx.HTTPStatusError`, `TimeoutError` (if the API cannot reach the vehicle in time) or a plain exception if something totally unexpected happens.

In my mind, we don't need additional error handling in here, as each failure mode is an actual failure we cannot recover from (well, we could retry but that usually doesn't help much - either the API works and it runs through, or there is something wrong and we have to wait for the API/car to recover).
(issue comment from author) [2023-04-25T21:05:07Z] CI fails due to `Error: API rate limit exceeded for installation ID 689304`
(review comment from reviewer) [2023-04-25T21:45:46Z] We do need to handle them. Only ValueError and HomeAssistantError is handled upstream. The rest are bugs and have side effects.



(review comment from author) [2023-04-25T22:16:16Z] But I suppose a broad `except Exception as ex` would not be the way to go? :)

I could implement a custom error class in the library (or rather reuse the ones implemented for #90274 and add more for the remote services in an additional libary version). 

However I am unsure how to best continue with this: Adding error handling should then be done in this PR, added to `select` from #88759 and implemented for [bmw_connected_drive/button.py#L129](https://github.com/home-assistant/core/blob/dev/homeassistant/components/bmw_connected_drive/button.py#L129).

As I won't be able to get something else than `except Exception as ex` through until the beta cut, please advise on how you would like to continue:
- broad exception (and adjust/improve in a later PR)
- keep as is and I'll create another PR in the next days that fixes exception handling for all above (should be able to fix it during beta fix if required)
- don't merge this (and then have a breaking change for 2023.6)
(review comment from author) [2023-04-27T19:03:07Z] Hope this satisfies the requirement (and maybe it can be squeezed into this beta?). Otherwise this will be breaking change for 2022.6 and I'll add the breaking change paragraph again.
(review comment from reviewer) [2023-04-28T12:21:54Z] What will raise a `TypeError`?
(review comment from reviewer) [2023-04-28T12:22:52Z] Please add a link to a changelog or GitHub commit compare view for the version bump in the PR description. Thanks!
(review comment from author) [2023-04-28T12:51:18Z] Forgot that, sorry. It is there now.
(review comment from author) [2023-04-28T12:56:09Z] The climate start/stop services won't trigger `TypeError` right now. When used in notify, it could be raised if parameters are of the wrong type.

If wanted, I can remove it (as it should not occur here).
(review comment from reviewer) [2023-04-28T19:14:19Z] If it can't happen we shouldn't add the code here.
(review comment from author) [2023-04-28T19:15:45Z] Figured as much an already removed in https://github.com/home-assistant/core/pull/91081/commits/b891651f8b1bc830b8a067e0cc26344c80e37df5 
(issue comment from reviewer) [2023-04-28T19:22:32Z] I added it to the milestone to avoid a breaking change.
(issue comment from author) [2023-04-28T19:33:22Z] Just removed the string casting as frenck requested in https://github.com/home-assistant/core/pull/92199#discussion_r1180734104.
Otherwise no changes.","['Technical Challenges', 'Documentation and Communication', 'Process Delays']"
111512,Add icon translations to Elkm1,2024-02-26 19:05:36+00:00,2024-03-06 09:02:20+00:00,merged,2,0,7,https://github.com/home-assistant/core/pull/111512,New feature (which adds functionality to an existing integration),31,2024-03-05T04:45:03Z,elkm1,joostlek,,[]
75251,Add Status and Configuration Entities for Tuya Smart Locks,2022-07-15 08:49:07+00:00,2023-12-04 19:06:06+00:00,closed,7,0,506,https://github.com/home-assistant/core/pull/75251,New feature (which adds functionality to an existing integration),957,2023-12-03T19:05:09Z,,,"(issue comment from reviewer) [2022-07-16T15:08:29Z] Why did you close the other and created a new one? 
(issue comment from reviewer) [2022-07-16T23:10:02Z] > Why did you close the other and created a new one?

I forgot I had PR pending and deleted the fork... ü§¶üèª‚Äç‚ôÇÔ∏è
(issue comment from reviewer) [2022-10-19T07:43:18Z] Waiting for review‚Ä¶
(issue comment from reviewer) [2023-01-24T05:15:46Z] Fixed the rebase bugs, but still need to fix the translations.
(issue comment from reviewer) [2023-01-24T07:18:18Z] > Sorry for the delays @dougiteixeira üôè
> 
> Could you rebase the PR so we can start moving it forward?

Hey @frenck, I believe it's in review condition.

Thanks.
(issue comment from reviewer) [2023-05-11T17:54:37Z] @frenck can you check this please?
(issue comment from reviewer) [2023-05-19T00:49:37Z] > @frenck can you check this please?

@frenck ! Please !!! 
(issue comment from reviewer) [2023-06-12T17:26:56Z] Any progress on that? Awaiting HA to support Tuya smart locks.
(issue comment from reviewer) [2023-06-14T17:12:57Z] @frenck Could you check!? 
(issue comment from reviewer) [2023-06-21T15:49:24Z] going to bump this PR since I really want the lock to be integrated lol
(issue comment from reviewer) [2023-07-09T16:11:42Z] Can someone explain me what this PR is waiting for? Only approval from @frenck?","['Process Delays', 'Documentation and Communication']"
117207,Add  unifi sensor for number of clients to device,2024-05-10 19:59:01+00:00,2024-06-13 15:01:58+00:00,closed,1899,8,32,https://github.com/home-assistant/core/pull/117207,New feature (which adds functionality to an existing integration),63565,2024-06-12T14:50:09Z,unifi,kimdv,"(issue comment from author) [2024-05-10T19:59:22Z] This PR is created as a draft, just to see if I'm on the right path. 
(issue comment from reviewer) [2024-05-10T20:52:23Z] Yes. Go on üëçüèª
(issue comment from reviewer) [2024-05-11T18:12:48Z] I've published aiounifi v78 https://github.com/Kane610/aiounifi/compare/v77...v78
(issue comment from reviewer) [2024-05-16T19:08:26Z] This one is nearly complete, maybe fix this simple one in between the more complex PRs?
(review comment from reviewer) [2024-05-31T21:16:07Z] Im not sure if we should consider this data for this sensor
(review comment from author) [2024-06-01T08:06:44Z] So my initial thought is that I want to know how many devices is on the network now.
If I understand it correctly, when removing the number will only increase when devices join the network right ?
(review comment from reviewer) [2024-06-05T18:08:47Z] It would presumably just take a bit longer before the number decreases. I think its better to start without this tweak and we can then add it if people are unhappy with the representation
(review comment from author) [2024-06-06T08:52:38Z] Just to be clear and I fully understand it üòÖ
 will the number always increase and never decrease then?  
(review comment from reviewer) [2024-06-06T08:54:35Z] Remove it and test it out :)

I would assume it would decrease (but maybe in a lower fashion) as well but if it doesnt we keep it in
(review comment from author) [2024-06-06T12:39:18Z] Removed ti
(review comment from reviewer) [2024-06-06T13:13:30Z] So you tester it and it still works?
(review comment from reviewer) [2024-06-08T11:41:48Z] Sorry for back and forth here, I saw that the same thing was done on the wlan client side, so lets keep it as it was considering the last seen as well.
(issue comment from reviewer) [2024-06-11T16:42:14Z] Oops
(issue comment from reviewer) [2024-06-12T14:50:09Z] New PR is up to side step my rebase debacle :)","['Process Delays', 'Technical Challenges', 'User Experience']"
124202,Add YoLink lock V2 support,2024-08-19 07:16:18+00:00,2024-08-29 15:02:13+00:00,merged,1,1,9,https://github.com/home-assistant/core/pull/124202,New feature (which adds functionality to an existing integration),39,2024-08-28T12:18:56Z,yolink,matrixd2,"(issue comment from author) [2024-08-28T03:53:00Z] Any updates?
(review comment from reviewer) [2024-08-28T11:50:40Z] This can be moved outside of the if statement","['Process Delays', 'Technical Challenges']"
108896,Add play/pause functionality for Vizio Smartcast media_player entities,2024-01-26 07:00:46+00:00,2024-04-26 07:01:45+00:00,merged,3,5,89,https://github.com/home-assistant/core/pull/108896,New feature (which adds functionality to an existing integration),17,2024-04-25T06:25:10Z,vizio,NasaGeek,"(issue comment from author) [2024-03-27T06:25:57Z] Resolved conflicts and would still like to see this merged if anyone would be willing to review it.
(review comment from reviewer) [2024-04-23T14:14:35Z] Why does one of these set `log_api_exception` to True and the other to False?
(review comment from author) [2024-04-23T23:00:18Z] I'm not sure what you mean; all instances of the `log_api_exception` parameter are set to `False` in this file.
(review comment from reviewer) [2024-04-24T06:12:00Z] Why is this changed? Is it to ensure the Play/Pause buttons always show in the frontend?
(review comment from reviewer) [2024-04-24T06:12:43Z] You're right, I have no idea what I meant üôà 
(review comment from author) [2024-04-25T04:24:36Z] Yes, this gives us separate play/pause buttons rather than a single dynamic button (which won't actually work correctly because the Vizio API doesn't provide a playing/paused/idle status).","['Process Delays', 'Technical Challenges', 'Documentation and Communication', 'Specific Domain Challenges']"
48703,Add hive alarm support,2021-04-05 20:32:33+00:00,2022-05-30 09:21:57+00:00,closed,12257,3,222,https://github.com/home-assistant/core/pull/48703,New feature (which adds functionality to an existing integration),595558,2021-11-14T09:56:06Z,hive,KJonline,"(issue comment from author) [2021-05-06T06:59:55Z] @MartinHjelmare please could you take a look at this?
(issue comment from author) [2021-07-05T08:23:48Z] @MartinHjelmare please can the stale label be removed and the PR reviewed?
(review comment from reviewer) [2021-11-14T05:41:09Z] The scope of variables could be reduced here.

Or maybe the entire thing can be shortened. I think something like this can work?
```suggestion
    if devices:
        async_add_entities([HiveAlarmControlPanelEntity(hive, dev) for dev in devices], True)
```
(review comment from reviewer) [2021-11-14T05:42:14Z] I realize this PR has been sitting for months -- now probably worth adding `DeviceInfo` here given that style was changed.
(review comment from reviewer) [2021-11-14T05:42:45Z] Consider updating to `_attr_icon = ICON` at the top of this class. (I realize this was a new style introduced after this PR was sent)
(issue comment from reviewer) [2021-11-14T09:32:06Z] Hi @GitHub-Action, 

It seems you haven't yet signed a CLA. Please do so [here](https://home-assistant.io/developers/cla_sign_start/?pr=home-assistant&#x2F;core#48703).

Once you do that we will be able to review and accept this pull request.

Thanks!

(issue comment from reviewer) [2021-11-14T09:52:48Z] Hi @GitHub-Action, 

It seems you haven't yet signed a CLA. Please do so [here](https://home-assistant.io/developers/cla_sign_start/?pr=home-assistant&#x2F;core#48703).

Once you do that we will be able to review and accept this pull request.

Thanks!

(issue comment from reviewer) [2021-11-14T09:56:06Z] Please start over in fresh branch and PR. The branch is tainted and you're notifying 25+ members.
(issue comment from author) [2021-11-14T09:56:18Z] @allenporter  Having to close this as the rebase has included all the commits a new PR will be opened","['Process Delays', 'Technical Challenges', 'Documentation and Communication']"
58060,Add a Preset mode for Honeywell permanent hold,2021-10-19 20:17:16+00:00,2021-10-30 00:03:13+00:00,merged,4,14,9,https://github.com/home-assistant/core/pull/58060,New feature (which adds functionality to an existing integration),40,2021-10-28T23:59:51Z,honeywell,schreyack,"(issue comment from reviewer) [2021-10-19T20:17:19Z] Hi @schreyack, 

It seems you haven't yet signed a CLA. Please do so [here](https://home-assistant.io/developers/cla_sign_start/?pr=home-assistant&#x2F;core#58060).

Once you do that we will be able to review and accept this pull request.

Thanks!

(review comment from reviewer) [2021-10-20T13:25:50Z] Should this also turn off away mode?
(review comment from reviewer) [2021-10-20T13:26:01Z] Should this also turn off hold mode?
(review comment from author) [2021-10-20T13:31:20Z] it does both.
(review comment from author) [2021-10-20T13:32:16Z] mm. good point.  will fix.
(review comment from author) [2021-10-20T13:37:35Z] updated to flip the away mode boolean when turning on hold mode.
(review comment from author) [2021-10-20T13:40:35Z] sorry misunderstood your question... hold mode is determined by the actual state of the thermostat (since it is a natively supported feature) whereas away mode is a feature ""created"" in HA to simulate what many other types of thermostats do.  so when turning on away mode, we don't need to turn off hold mode.  (technically, on the thermostat itself, all away mode does is turn on hold mode and set the temperature.)  this new feature allows you to set hold mode without setting the temperature... ie maintain current temp setting.
(issue comment from author) [2021-10-26T16:09:31Z] > Please fix the imports and flake8 errors

done!
(issue comment from reviewer) [2021-10-26T20:10:09Z] Thanks for bumping the dependency! However, could you please update the PR description to contain at least one (or multiple) of the following:

- A link to the release notes of this package version, and all versions in between.
- A link to the changelog of this package.
- A link to a Git(Hub) diff/compare view from the current version to the bumped version.

This allows us to review upstream changes, which is needed to decide this change is working as intended and/or if we can include it in, for example, a patch release of Home Assistant.

Thanks already! üëç
(issue comment from author) [2021-10-26T21:03:20Z] > Thanks for bumping the dependency! However, could you please update the PR description to contain at least one (or multiple) of the following:
> 
> * A link to the release notes of this package version, and all versions in between.
> * A link to the changelog of this package.
> * A link to a Git(Hub) diff/compare view from the current version to the bumped version.
> 
> This allows us to review upstream changes, which is needed to decide this change is working as intended and/or if we can include it in, for example, a patch release of Home Assistant.
> 
> Thanks already! üëç

Diff view:
https://github.com/kk7ds/somecomfort/compare/0.7.0...0.8.0

Releases:
https://github.com/kk7ds/somecomfort/releases

(issue comment from reviewer) [2021-10-26T21:44:59Z] 
> Diff view: [kk7ds/somecomfort@0.7.0...0.8.0](https://github.com/kk7ds/somecomfort/compare/0.7.0...0.8.0)
> 
> Releases: [kk7ds/somecomfort/releases](https://github.com/kk7ds/somecomfort/releases)

In the future, please add this to the Proposed change section.  I've gone ahead and moved it for you.  Thanks!
(review comment from reviewer) [2021-10-26T21:51:04Z] It looks like `mode` is coming directly from the device and not the library
https://github.com/kk7ds/somecomfort/blob/master/somecomfort/client.py#L156
so we can't be sure its a hold mode.

Since there are only two modes, https://github.com/kk7ds/somecomfort/blob/master/somecomfort/client.py#L255

Would you please avoid using `setattr` here instead and throw an exception
if the mode returned isn't valid.
(review comment from author) [2021-10-27T13:41:36Z] Actually, we do know it's a hold mode.  The Honeywell thermostats have a permanent hold setting and the somecomfort library is able to gather that info from the device.  So in this case, the update I'm making is to allow a user to see if their device is in permanent hold or not and to also allow them to turn the hold on or off, which is why I use `setattr` to turn the hold mode on.
(review comment from reviewer) [2021-10-27T15:14:58Z] What's concerning here is the integration is accepting arbitrary unvalidated data from the Honeywell api and using it to set an attribute.  

This is one of the ways software vulnerabilities creep in. While I think the risk is low here, we should mitigate it if it's reasonable to do so.

If there is validation and I'm missing it, please help me out and point me to it.
(review comment from author) [2021-10-27T21:06:20Z] Ah!  Now I understand what you're after... I added a check that confirms the mode returned is within the values that it should be (auto, off, heat, cool).

https://github.com/home-assistant/core/pull/58060/commits/4c0212df14175e061bfc28f939fd9d981d7d30b1
(issue comment from reviewer) [2021-10-28T18:52:21Z] Should be good to go once the `pylint` issue is fixed

```
************* Module homeassistant.components.honeywell.climate
Warning: homeassistant/components/honeywell/climate.py:372:19: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
Warning: homeassistant/components/honeywell/climate.py:379:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
Error: Process completed with exit code 20.
```
(issue comment from reviewer) [2021-10-28T20:03:37Z] Its going to need `black` as well or the CI will fail.  Will start the CI after
(review comment from reviewer) [2021-10-28T20:04:55Z] ```suggestion
```
(review comment from reviewer) [2021-10-28T20:05:08Z] ```suggestion
        if mode in HW_MODE_TO_HVAC_MODE:
```
(review comment from reviewer) [2021-10-28T20:05:24Z] `.keys()` is the default so this was ok. It just wanted you to drop the `.keys()`
(issue comment from reviewer) [2021-10-28T20:08:37Z] In future PRs, please be sure to create a branch with `git checkout -b <your branch name here>` instead of merging from `dev` directly.  Thanks üëç 
(issue comment from author) [2021-10-28T20:27:34Z] running black now.  thanks for your patience with me on this... obviously it's my first time. :) 
(review comment from reviewer) [2021-10-28T22:17:10Z] ```suggestion
            _LOGGER.error(""Invalid system mode returned: %s"", mode)
```","['Process Delays', 'Technical Challenges', 'Documentation and Communication']"
84869,Initial setup for Sunbeam Dual Zone Heated Bedding,2022-12-30 20:07:53+00:00,2023-07-05 16:08:21+00:00,closed,4,5,185,https://github.com/home-assistant/core/pull/84869,New feature (which adds functionality to an existing integration),81,2023-07-04T16:06:00Z,tuya,chuckdeal97,"(review comment from reviewer) [2023-01-17T10:31:17Z] These DPs aren't in the linked documentation?
(review comment from reviewer) [2023-01-17T10:31:50Z] I could not find these DPs in the linked documentation.
(review comment from reviewer) [2023-01-17T10:32:21Z] Why would Level 1 be ""Low"", and not just ""Level 1"" ?
(review comment from author) [2023-01-25T01:22:11Z] I was mimicking the tuya Smart Life app interface for this device.  It uses an ""L"" and ""H"" for the heat settings.  I'm not set on the idea and can put it back to match the actual codes.

<img src=""https://user-images.githubusercontent.com/106625807/214458674-8623e136-5360-43fd-adb0-51bc61b8b877.png"" width=""200"">
<img src=""https://user-images.githubusercontent.com/106625807/214458682-4f873983-24dc-4b11-b985-1d455d672c65.png"" width=""200"">
(review comment from author) [2023-01-25T02:04:05Z] My apologies for not making a stronger connection between the DPCodes and the documentation.  I was also frustrated by the complete mismatch of the documentation to what the diagnostics showed as the used codes.  I've attached the diagnostics report from this device from my Home Assistant.  

What would the correct way to support this device be?  Create local constants instead of adding to DPCodes?


[tuya-d49601845676c22b15d59c2008f4b0ef-Sunbeam Bedding-b547a8326b91fe6f46c2167bc036198e.json (1).txt](https://github.com/home-assistant/core/files/10495472/tuya-d49601845676c22b15d59c2008f4b0ef-Sunbeam.Bedding-b547a8326b91fe6f46c2167bc036198e.json.1.txt)
","['Documentation and Communication', 'User Experience']"
128530,Add switch entity to Cambridge Audio,2024-10-16 18:32:36+00:00,2024-10-26 13:05:03+00:00,merged,8,2,8,https://github.com/home-assistant/core/pull/128530,New feature (which adds functionality to an existing integration),265,2024-10-25T09:22:50Z,cambridge_audio,noahhusby,"(review comment from reviewer) [2024-10-16T19:15:19Z] ```suggestion
        ""name"": ""Early update""
```
(review comment from reviewer) [2024-10-16T19:15:37Z] ```suggestion
    async_add_entities(
        CambridgeAudioSwitch(entry.runtime_data, description)
        for description in CONTROL_ENTITIES
    )
```",['Documentation and Communication']
111968,Add `open` state to LockEntity,2024-03-01 17:32:25+00:00,2024-05-09 19:01:33+00:00,merged,18,3,68,https://github.com/home-assistant/core/pull/111968,New feature (which adds functionality to an existing integration),410,2024-05-08T18:42:22Z,lock,gjohansson-ST,"(review comment from reviewer) [2024-03-03T11:34:29Z] May be add a test to ensure code test coverage.
(review comment from author) [2024-03-03T11:50:04Z] Was a mistake in lock state which made this but it's now also tested properly üëç 
(issue comment from reviewer) [2024-03-04T15:50:46Z] I added the awaiting-frontend flag; this PR should not be merged until the frontend PR is approved.
(review comment from reviewer) [2024-04-13T13:33:21Z] This is technically correct as open means unlocked, but it would be easier for the user in the frontend if this would be""{entity_name} is open"". 
(issue comment from author) [2024-04-16T17:49:19Z] > I added the awaiting-frontend flag; this PR should not be merged until the frontend PR is approved.

Frontend PR has been approved
(issue comment from reviewer) [2024-04-16T20:18:19Z] These tests fail and are related to this PR:
```
FAILED tests/components/group/test_init.py::test_cover_added_after_group - AssertionError: assert 'locked' == 'closed'
FAILED tests/components/group/test_init.py::test_group_that_references_a_group_of_covers - AssertionError: assert 'locked' == 'closed'
FAILED tests/components/group/test_init.py::test_group_that_references_two_groups_of_covers - AssertionError: assert 'locked' == 'closed'
FAILED tests/components/group/test_init.py::test_group_that_references_two_types_of_groups - AssertionError: assert 'locked' == 'closed'
```
(issue comment from author) [2024-04-16T20:22:48Z] > These tests fail and are related to this PR:
> 
> ```
> 
> FAILED tests/components/group/test_init.py::test_cover_added_after_group - AssertionError: assert 'locked' == 'closed'
> 
> FAILED tests/components/group/test_init.py::test_group_that_references_a_group_of_covers - AssertionError: assert 'locked' == 'closed'
> 
> FAILED tests/components/group/test_init.py::test_group_that_references_two_groups_of_covers - AssertionError: assert 'locked' == 'closed'
> 
> FAILED tests/components/group/test_init.py::test_group_that_references_two_types_of_groups - AssertionError: assert 'locked' == 'closed'
> 
> ```

They don't fail locally and its covers?!
I guess I'll take another look tomorrow but it makes no sense to me. 
(issue comment from reviewer) [2024-04-16T20:24:20Z] > > These tests fail and are related to this PR:
> > ```
> > 
> > FAILED tests/components/group/test_init.py::test_cover_added_after_group - AssertionError: assert 'locked' == 'closed'
> > 
> > FAILED tests/components/group/test_init.py::test_group_that_references_a_group_of_covers - AssertionError: assert 'locked' == 'closed'
> > 
> > FAILED tests/components/group/test_init.py::test_group_that_references_two_groups_of_covers - AssertionError: assert 'locked' == 'closed'
> > 
> > FAILED tests/components/group/test_init.py::test_group_that_references_two_types_of_groups - AssertionError: assert 'locked' == 'closed'
> > ```
> 
> They don't fail locally and its covers?! I guess I'll take another look tomorrow but it makes no sense to me.

Update your local branch and you should be able to reproduce.
(issue comment from author) [2024-04-17T18:21:57Z] Tests are flaky but can't figure out what's the issue yet. 
If I run all group tests there is no issue, if I run only init tests it mostly fails but not always. Running the individual tests are fine. 

So something with this PR is obviously doing it (as in dev it seems all fine) but no idea yet. 
(issue comment from reviewer) [2024-04-17T18:23:22Z] > Tests are flaky but can't figure out what's the issue yet. If I run all group tests there is no issue, if I run only init tests it mostly fails but not always. Running the individual tests are fine.
> 
> So something with this PR is obviously doing it (as in dev it seems all fine) but no idea yet.

I could have a look?
(issue comment from reviewer) [2024-04-17T19:14:10Z] The tests became unpredictable after this PR. I can still reproduce some errors locally:

```bash
pytest tests/components/group/test_init.py --count 10 -n auto
```
(issue comment from reviewer) [2024-04-18T05:59:10Z] I think the new open state for locks might be confused with the cover open states when grouping together. The test might become lingering if it depends on the order the entities are grouped.
(issue comment from reviewer) [2024-04-18T06:38:25Z] This should fix the CI tests: https://github.com/home-assistant/core/pull/115797
(issue comment from reviewer) [2024-04-18T07:58:08Z] While the changes in https://github.com/home-assistant/core/pull/115797 fixes CI it also hides the underlying issue which to my understanding is that mixed legacy groups behave different depending on if `cover` or `lock` is setup first. I don't think we can merge this PR before that issue is fully understood.
(issue comment from reviewer) [2024-04-18T08:16:31Z] I added a new test case `tests/components/group/test_init.py::test_cover_lock_issue` which fails ~50% of the time on its own + some debug prints.

Before this PR, the group registry has these mappings in `GroupIntegrationRegistry.on_off_mapping`:
""open"" -> ""closed"" (Registred by cover)
""unlocked"" -> ""locked"" (Registred by lock)

With this PR, lock also registers this mapping, which conflicts with the mapping registered by cover:
""open"" -> ""locked"" (Registred by lock)

I think `GroupIntegrationRegistry.on_off_mapping` and `GroupIntegrationRegistry.off_on_mapping` need to be modified to be indexed by `(domain, state)` instead of just by `state` for this to be solved.

Edit:
This may be tricky for groups of groups
https://github.com/home-assistant/core/blob/6fc3b30174140a745193474543bb8085742c26e4/homeassistant/components/group/entity.py#L390-L395
(issue comment from reviewer) [2024-04-19T10:52:05Z] Opened https://github.com/home-assistant/core/pull/115849 to allow testing multi domain groups. If this gets merged we can add a case with `cover` and  `locks` that both have an `open` state.
(issue comment from reviewer) [2024-04-20T11:15:56Z] Opened https://github.com/home-assistant/core/pull/115866 to enable better support for entity platforms with multiple `on` states.
(issue comment from reviewer) [2024-04-24T15:04:35Z] Seems the group OFF to ON mapping was not used any more for the group state. Added some tests. Will open a separate fix PR to fix this for group and remove these commits here.

(issue comment from reviewer) [2024-04-24T17:20:40Z] Fix for group state: https://github.com/home-assistant/core/pull/116116","['Process Delays', 'Technical Challenges', 'Documentation and Communication', 'Specific Domain Challenges', 'User Experience']"
63281,Vera scene exclude,2022-01-03 11:54:52+00:00,2022-05-17 21:01:42+00:00,closed,7,7,133,https://github.com/home-assistant/core/pull/63281,New feature (which adds functionality to an existing integration),57,2022-05-16T20:44:31Z,vera,mmillmor,"(issue comment from reviewer) [2022-01-03T11:54:54Z] Hi @mmillmor, 

It seems you haven't yet signed a CLA. Please do so [here](https://home-assistant.io/developers/cla_sign_start/?pr=home-assistant&#x2F;core#63281).

Once you do that we will be able to review and accept this pull request.

Thanks!

(review comment from reviewer) [2022-01-03T12:06:58Z] This should not be added to the YAML configuration. We don't allow changes or additions to the YAML configuration for integrations that connect to devices or services.
(review comment from author) [2022-01-03T12:10:48Z] OK. I was basing this on what was there before, but happy to change it. If I need to add a new setting to the set of existing settings, what is the right way to do it? 
(review comment from reviewer) [2022-01-03T12:11:43Z] > If I need to add a new setting to the set of existing settings, what is the right way to do it?

I'm not sure about this question, could you clarify it?

(review comment from author) [2022-01-03T12:17:11Z] Sure, no problem. This component already has 3 settings in the schema - the controller URL, a list of devices to treat as lights, and a list of devices to not import. I added a 4th setting in the schema - a list of scenes to not import. I added that new setting in exactly the same way as the other settings. The change was rejected on the basis that changes or additions to the YAML configuration are now allowed. My question is if it is not allowed to add an additional setting this way, what is the correct way to do it instead? This is my first tweak to an existing component, and would appreciate pointers on how to do it right.
(review comment from reviewer) [2022-01-03T12:20:43Z] You have added both the possibility to set this via YAML and via the UI (as part of an option flow). The option flow is fine üëç  The YAML part isn't allowed.

For more information see: <https://github.com/home-assistant/architecture/blob/master/adr/0010-integration-configuration.md#decision>
(review comment from author) [2022-01-03T12:37:00Z] Got it - thanks for explaining! I have removed that line now and re-tested
(issue comment from reviewer) [2022-01-04T14:27:30Z] @mmillmor Can you make sure the tests/CI pass?
(issue comment from author) [2022-01-22T11:43:59Z] All checks now pass
(review comment from reviewer) [2022-01-23T16:17:53Z] ```suggestion
        return f""vera_scene_{self.vera_scene.scene_id}""
```
(issue comment from reviewer) [2022-05-16T20:44:31Z] Because there hasn't been any activity on this PR for quite some time now, I've decided to close it for being stale.

Feel free to re-open this PR when you are ready to pick up work on it again üëç","['Process Delays', 'Technical Challenges', 'Documentation and Communication']"
116134,Add allow_negative configuration option to DurationSelector,2024-04-24 22:08:32+00:00,2024-05-31 16:01:52+00:00,merged,2,3,35,https://github.com/home-assistant/core/pull/116134,New feature (which adds functionality to an existing integration),13,2024-05-30T15:42:35Z,,ronweikamp,"(issue comment from reviewer) [2024-04-25T08:26:47Z] @bramkragten we discussed this yesterday, could you take a look?
(review comment from reviewer) [2024-05-29T07:41:12Z] ```suggestion
            # Allow negative durations. Will default to False in HA Core 2025.6.0.
            vol.Optional(""allow_negative""): cv.boolean,
```
(issue comment from reviewer) [2024-05-29T07:49:32Z] The new behavior for the duration selector proposed in this PR is to make it possible for core integrations and blueprint developers to signal if only positive durations are allowed

#### Behavior today for the duration selector:
- Frontend: Allows both positive and negative durations, although red squiggles are shown when negative numbers are entered
- Core: Allows both positive and negative durations

#### New behavior when we allow both negative and positive durations:
- Frontend: Show a new control to indicate negative duration
- Core: Allow both positive and negative durations

#### New behavior when we do allow only positive durations:
- Frontend: Don't allow entering negative durations, don't show the control for negating a duration
- Core: Only allow positive durations

We don't want existing blueprints and integrations which already use the duration selector to suddenly show the new control for negating durations, but we also don't want to risk breaking blueprints which rely on it being possible (although unintuitive) to input negative durations. Hence, during a deprecation period, we should keep the old behavior if the new flag has not been set, and after that deprecation period default to only allowing positive durations.



(review comment from reviewer) [2024-05-29T08:07:41Z] ```suggestion
        if self.config.get(""allow_negative"", True):
            cv.time_period_dict(data)
        else:
            cv.positive_time_period_dict(data)
```
(review comment from reviewer) [2024-05-29T08:07:54Z] ```suggestion
            {""allow_negative"": False},
```
(issue comment from reviewer) [2024-05-30T14:31:53Z] @bramkragten Can this PR be merged before frontend has been updated, or should we wait for frontend?

Edit: Aligned with @bramkragten that it's OK to merge this PR first","['Process Delays', 'Technical Challenges']"
44827,Utility meter manual,2021-01-04 19:24:22+00:00,2021-02-14 01:31:25+00:00,closed,3,4,39,https://github.com/home-assistant/core/pull/44827,New feature (which adds functionality to an existing integration),28,2021-02-13T00:40:52Z,utility_meter,gigatexel,"(review comment from reviewer) [2021-01-04T20:00:15Z] I just realised something very important üòÑ 

The CONF_METER_TYPE is optional that means you **already** don't need to define the meter type

That is, your purpose (to not reset the utility_meter) already exists and is working!
(review comment from reviewer) [2021-01-04T20:03:13Z] What is missing is in the documentation, in there it should state (as seen in your PR) that the cycle is **optional**
(review comment from author) [2021-01-05T07:31:00Z] Yes, I also noticed that the CONF_METER_TYPE was already programmed as optional but not default value was assigned. In this way I feel it is better, because it eliminates ambiguity by defaulting to a given cycle.
Also added some extra clarification in manual text. In the `{% configuration %}` section of the docs, the `cycle`was already labeled as `required: false`
(review comment from reviewer) [2021-01-05T08:07:20Z] When it is `Optional` and no `default` is assigned, it gets assigned `None`",['Documentation and Communication']
106553,Add hysteresis support to Shelly integration,2023-12-28 13:14:24+00:00,2024-02-13 18:01:58+00:00,closed,4,9,46,https://github.com/home-assistant/core/pull/106553,New feature (which adds functionality to an existing integration),111,2024-02-12T17:13:05Z,shelly,chemelli74,"(review comment from reviewer) [2024-01-29T14:22:06Z] Config payload is not sent from the device periodically, in the case of `temperature hysteresis` no information about the value change is sent from the device. How will this value be updated in HA when the user changes it in the device UI?
(review comment from reviewer) [2024-01-29T14:23:55Z] The device user interface uses the name `Temperature hysteresis`, I think we should keep this name.
(review comment from author) [2024-01-29T14:31:22Z] When a config parameter is changed in the device UI, then a Event for it is generated and the `config_entry` is reloaded. This makes the value update.

(review comment from author) [2024-01-29T14:31:36Z] Good point, will change.
(review comment from reviewer) [2024-01-29T14:42:59Z] So we don't have real-time entity state updates, we need to wait 60 seconds for the config entry to reload. In my opinion, for the implementation of such an entity to make sense, the device must send the `temperature hysteresis` value periodically. Without this, value synchronization only occurs in one direction.
(review comment from reviewer) [2024-01-29T14:45:23Z] We need to ask the Shelly team again for this feature.
(review comment from author) [2024-01-29T15:00:38Z] Please try again, I did already twice.
Indeed would be the best solution.

(review comment from author) [2024-02-12T15:53:10Z] Final decision from Shelly is that we need to re-fetch config once we get the notification is changed.
This value won't be ever exposed as a status update.

(review comment from reviewer) [2024-02-12T16:12:10Z] In such case, in my opinion we should drop the implementation of this entity. Its usefulness in automations is very low, the user will change it once, maybe twice during device configuration, so he or she might as well do it from the device's configuration panel.
(issue comment from author) [2024-02-12T17:13:05Z] Rejected","['Specific Domain Challenges', 'User Experience']"
126798,Add refoss em16 device model,2024-09-26 05:55:09+00:00,2024-10-26 14:01:42+00:00,merged,2,7,29,https://github.com/home-assistant/core/pull/126798,New feature (which adds functionality to an existing integration),38,2024-10-25T13:22:25Z,refoss,ashionky,"(review comment from reviewer) [2024-09-30T19:07:24Z] This seems an unrelated change to what is being described in this PR?
(review comment from author) [2024-10-08T03:03:23Z] @frenck  
User feedback:   hope this time interval is shorter Ôºö https://github.com/ashionky/refoss_ha/issues/6
I will make a note in the description
(review comment from reviewer) [2024-10-21T14:18:15Z] Let's do this in a separate PR. I have a hard time believing that this is not possible without service call. My suspicion would be that the machine they are running this on is doing too much at the same time and can't keep up with the 5 seconds. Because 5 seconds is very very low for HA standards
(review comment from author) [2024-10-22T01:15:49Z] > Let's do this in a separate PR. I have a hard time believing that this is not possible without service call. My suspicion would be that the machine they are running this on is doing too much at the same time and can't keep up with the 5 seconds. Because 5 seconds is very very low for HA standards

Ok, I'll delete it.
Our device supports 5-second requests (the app also requests devices at 5-second intervals)
Users have previously reported this situation.
In the case of 5 seconds, I verified with my own computer that HA can work normally.
Thanks!

(review comment from reviewer) [2024-10-25T10:01:00Z] I am now looking at this, and this list is exactly the same as the `em06` one. I'd rather see that deduplicated
(issue comment from author) [2024-10-25T12:49:37Z] > The code does not work since `""em""` is not a value of `SENSORS`

The code is ready now
(issue comment from reviewer) [2024-10-25T12:50:43Z] No, the code literally doesn't work. It's now broken for both the em06 and em16
(issue comment from author) [2024-10-25T13:04:11Z] > No, the code literally doesn't work. It's now broken for both the em06 and em16

üòØ Haha, I saw itÔºå ThanksÔºÅ
(review comment from author) [2024-10-25T13:29:07Z] > Let's do this in a separate PR. I have a hard time believing that this is not possible without service call. My suspicion would be that the machine they are running this on is doing too much at the same time and can't keep up with the 5 seconds. Because 5 seconds is very very low for HA standards

Can I submit a separate PR for this modification pointÔºü
(review comment from reviewer) [2024-10-25T13:40:53Z] You're always free to open a PR, but I think that 5 seconds is very very low and not useful for the majority of users","['Process Delays', 'Technical Challenges', 'Documentation and Communication', 'User Experience']"
114667,Add reconfigure step for here_travel_time,2024-04-02 19:40:11+00:00,2024-08-01 15:01:44+00:00,merged,3,5,119,https://github.com/home-assistant/core/pull/114667,New feature (which adds functionality to an existing integration),288,2024-07-31T13:08:25Z,here_travel_time,eifinger,"(review comment from reviewer) [2024-05-28T08:15:19Z] Assuming this is for type checking, change like this:
```suggestion
        if TYPE_CHECKING:
            assert self._entry
```
(review comment from reviewer) [2024-05-28T08:17:00Z] Don't present the form of another step, instead call `async_step_user`
(review comment from reviewer) [2024-05-28T08:19:57Z] Add a comment explaining we pop this to clear previous configuration using an entity
(review comment from reviewer) [2024-05-28T08:20:09Z] Add a comment explaining we pop these to clear previous configuration using coordinates
(review comment from reviewer) [2024-05-28T08:21:19Z] Instead of defaults, use constant schemas with suggested values added by calling `self.add_suggested_values_to_schema`","['Technical Challenges', 'Documentation and Communication']"
